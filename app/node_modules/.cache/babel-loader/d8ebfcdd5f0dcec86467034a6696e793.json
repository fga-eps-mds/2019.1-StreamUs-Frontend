{"ast":null,"code":"/**\n * Copyright (c) 2016-present, Nicolas Gallagher.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nimport hyphenateStyleName from 'hyphenate-style-name';\nimport mapKeyValue from '../../modules/mapKeyValue';\nimport normalizeValue from './normalizeValue';\nimport prefixStyles from '../../modules/prefixStyles';\n\nvar createDeclarationString = function createDeclarationString(prop, val) {\n  var name = hyphenateStyleName(prop);\n  var value = normalizeValue(prop, val);\n\n  if (Array.isArray(val)) {\n    return val.map(function (v) {\n      return name + \":\" + v;\n    }).join(';');\n  }\n\n  return name + \":\" + value;\n};\n/**\n * Generates valid CSS rule body from a JS object\n *\n * createRuleBlock({ width: 20, color: 'blue' });\n * // => 'color:blue;width:20px'\n */\n\n\nvar createRuleBlock = function createRuleBlock(style) {\n  return mapKeyValue(prefixStyles(style), createDeclarationString).sort().join(';');\n};\n\nexport default createRuleBlock;","map":{"version":3,"sources":["/home/ygor/Documents/FGA/eps/2019.1-StreamUs-Frontend/node_modules/react-native-web/dist/exports/StyleSheet/createRuleBlock.js"],"names":["hyphenateStyleName","mapKeyValue","normalizeValue","prefixStyles","createDeclarationString","prop","val","name","value","Array","isArray","map","v","join","createRuleBlock","style","sort"],"mappings":"AAAA;;;;;;;;AAQA,OAAOA,kBAAP,MAA+B,sBAA/B;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,YAAP,MAAyB,4BAAzB;;AAEA,IAAIC,uBAAuB,GAAG,SAASA,uBAAT,CAAiCC,IAAjC,EAAuCC,GAAvC,EAA4C;AACxE,MAAIC,IAAI,GAAGP,kBAAkB,CAACK,IAAD,CAA7B;AACA,MAAIG,KAAK,GAAGN,cAAc,CAACG,IAAD,EAAOC,GAAP,CAA1B;;AAEA,MAAIG,KAAK,CAACC,OAAN,CAAcJ,GAAd,CAAJ,EAAwB;AACtB,WAAOA,GAAG,CAACK,GAAJ,CAAQ,UAAUC,CAAV,EAAa;AAC1B,aAAOL,IAAI,GAAG,GAAP,GAAaK,CAApB;AACD,KAFM,EAEJC,IAFI,CAEC,GAFD,CAAP;AAGD;;AAED,SAAON,IAAI,GAAG,GAAP,GAAaC,KAApB;AACD,CAXD;AAYA;;;;;;;;AAQA,IAAIM,eAAe,GAAG,SAASA,eAAT,CAAyBC,KAAzB,EAAgC;AACpD,SAAOd,WAAW,CAACE,YAAY,CAACY,KAAD,CAAb,EAAsBX,uBAAtB,CAAX,CAA0DY,IAA1D,GAAiEH,IAAjE,CAAsE,GAAtE,CAAP;AACD,CAFD;;AAIA,eAAeC,eAAf","sourcesContent":["/**\n * Copyright (c) 2016-present, Nicolas Gallagher.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nimport hyphenateStyleName from 'hyphenate-style-name';\nimport mapKeyValue from '../../modules/mapKeyValue';\nimport normalizeValue from './normalizeValue';\nimport prefixStyles from '../../modules/prefixStyles';\n\nvar createDeclarationString = function createDeclarationString(prop, val) {\n  var name = hyphenateStyleName(prop);\n  var value = normalizeValue(prop, val);\n\n  if (Array.isArray(val)) {\n    return val.map(function (v) {\n      return name + \":\" + v;\n    }).join(';');\n  }\n\n  return name + \":\" + value;\n};\n/**\n * Generates valid CSS rule body from a JS object\n *\n * createRuleBlock({ width: 20, color: 'blue' });\n * // => 'color:blue;width:20px'\n */\n\n\nvar createRuleBlock = function createRuleBlock(style) {\n  return mapKeyValue(prefixStyles(style), createDeclarationString).sort().join(';');\n};\n\nexport default createRuleBlock;"]},"metadata":{},"sourceType":"module"}