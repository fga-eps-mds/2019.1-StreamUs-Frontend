{"ast":null,"code":"Object.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.DefaultTabBar = undefined;\nvar _jsxFileName = \"src/basic/Tabs/DefaultTabBar.js\";\n\nvar _react = require(\"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require(\"prop-types\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _createReactClass = require(\"create-react-class\");\n\nvar _createReactClass2 = _interopRequireDefault(_createReactClass);\n\nvar _lodash = require(\"lodash\");\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _nativeBaseShoutemTheme = require(\"native-base-shoutem-theme\");\n\nvar _mapPropsToStyleNames = require(\"../../utils/mapPropsToStyleNames\");\n\nvar _mapPropsToStyleNames2 = _interopRequireDefault(_mapPropsToStyleNames);\n\nvar _platform = require(\"./../../theme/variables/platform\");\n\nvar _platform2 = _interopRequireDefault(_platform);\n\nvar _TabHeading = require(\"../TabHeading\");\n\nvar _Text = require(\"../Text\");\n\nvar _TabContainer = require(\"../TabContainer\");\n\nvar _utils = require(\"../../utils\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar ReactNative = require(\"react-native\");\n\nvar StyleSheet = ReactNative.StyleSheet,\n    View = ReactNative.View,\n    Animated = ReactNative.Animated,\n    Platform = ReactNative.Platform;\n\nvar Button = require(\"./Button\");\n\nvar DefaultTabBar = (0, _createReactClass2.default)({\n  displayName: \"DefaultTabBar\",\n  propTypes: {\n    goToPage: _propTypes2.default.func,\n    activeTab: _propTypes2.default.number,\n    tabs: _propTypes2.default.array,\n    backgroundColor: _propTypes2.default.string,\n    activeTextColor: _propTypes2.default.string,\n    inactiveTextColor: _propTypes2.default.string,\n    tabStyle: _utils.ViewPropTypes.style,\n    renderTab: _propTypes2.default.func,\n    underlineStyle: _utils.ViewPropTypes.style,\n    tabContainerStyle: _utils.ViewPropTypes.style\n  },\n  contextTypes: {\n    theme: _propTypes2.default.object\n  },\n  getDefaultProps: function getDefaultProps() {\n    return {\n      activeTextColor: _platform2.default.topTabBarActiveTextColor,\n      inactiveTextColor: _platform2.default.topTabBarTextColor,\n      backgroundColor: null,\n      tabFontSize: _platform2.default.tabFontSize\n    };\n  },\n  renderTabOption: function renderTabOption(name, page) {},\n  renderTab: function renderTab(name, page, isTabActive, onPressHandler, tabStyle, activeTabStyle, textStyle, activeTextStyle, tabHeaderStyle, tabFontSize) {\n    var headerContent = typeof name !== \"string\" ? name.props.children : undefined;\n    var _props = this.props,\n        activeTextColor = _props.activeTextColor,\n        inactiveTextColor = _props.inactiveTextColor;\n    var textColor = isTabActive ? activeTextColor : inactiveTextColor;\n    var fontWeight = isTabActive ? \"bold\" : \"normal\";\n\n    if (typeof name === \"string\") {\n      return _react2.default.createElement(Button, {\n        style: {\n          flex: 1\n        },\n        key: name,\n        onPress: function onPress() {\n          return onPressHandler(page);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        }\n      }, _react2.default.createElement(_TabHeading.TabHeading, {\n        style: isTabActive ? activeTabStyle : tabStyle,\n        active: isTabActive,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        }\n      }, _react2.default.createElement(_Text.Text, {\n        style: [{\n          fontSize: tabFontSize\n        }, isTabActive ? activeTextStyle : textStyle],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        }\n      }, name)));\n    } else {\n      return _react2.default.createElement(Button, {\n        style: {\n          flex: 1\n        },\n        key: _lodash2.default.random(1.2, 5.2),\n        onPress: function onPress() {\n          return onPressHandler(page);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        }\n      }, _react2.default.createElement(_TabHeading.TabHeading, {\n        style: tabHeaderStyle,\n        active: isTabActive,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        }\n      }, headerContent));\n    }\n  },\n  render: function render() {\n    var _this = this;\n\n    var variables = this.context.theme ? this.context.theme[\"@@shoutem.theme/themeStyle\"].variables : _platform2.default;\n    var platformStyle = variables.platformStyle;\n    var containerWidth = this.props.containerWidth;\n    var numberOfTabs = this.props.tabs.length;\n    var tabUnderlineStyle = {\n      position: \"absolute\",\n      width: containerWidth / numberOfTabs,\n      height: 4,\n      backgroundColor: variables.topTabBarActiveBorderColor,\n      bottom: 0\n    };\n    var left = this.props.scrollValue.interpolate({\n      inputRange: [0, 1],\n      outputRange: [0, containerWidth / numberOfTabs]\n    });\n    return _react2.default.createElement(_TabContainer.TabContainer, {\n      style: [{\n        backgroundColor: variables.tabDefaultBg\n      }, this.props.tabContainerStyle ? this.props.tabContainerStyle : {}],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      }\n    }, this.props.tabs.map(function (name, page) {\n      var isTabActive = _this.props.activeTab === page;\n      var renderTab = _this.props.renderTab || _this.renderTab;\n      return renderTab(name, page, isTabActive, _this.props.goToPage, _this.props.tabStyle[page], _this.props.activeTabStyle[page], _this.props.textStyle[page], _this.props.activeTextStyle[page], _this.props.tabHeaderStyle[page], variables.tabFontSize);\n    }), _react2.default.createElement(Animated.View, {\n      style: [tabUnderlineStyle, {\n        left: left\n      }, this.props.underlineStyle],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      }\n    }));\n  }\n});\nvar StyledTab = (0, _nativeBaseShoutemTheme.connectStyle)(\"NativeBase.DefaultTabBar\", {}, _mapPropsToStyleNames2.default)(DefaultTabBar);\nexports.DefaultTabBar = StyledTab;","map":null,"metadata":{},"sourceType":"script"}