{"ast":null,"code":"Object.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ActionSheetContainer = undefined;\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _jsxFileName = \"src/basic/Actionsheet.js\";\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require(\"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require(\"prop-types\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _reactNative = require(\"react-native\");\n\nvar _nativeBaseShoutemTheme = require(\"native-base-shoutem-theme\");\n\nvar _Text = require(\"./Text\");\n\nvar _Button = require(\"./Button\");\n\nvar _View = require(\"./View\");\n\nvar _Icon = require(\"./Icon\");\n\nvar _Left = require(\"./Left\");\n\nvar _Right = require(\"./Right\");\n\nvar _Body = require(\"./Body\");\n\nvar _ListItem = require(\"./ListItem\");\n\nvar _mapPropsToStyleNames = require(\"../utils/mapPropsToStyleNames\");\n\nvar _mapPropsToStyleNames2 = _interopRequireDefault(_mapPropsToStyleNames);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar ActionSheetContainer = function (_Component) {\n  _inherits(ActionSheetContainer, _Component);\n\n  function ActionSheetContainer(props) {\n    _classCallCheck(this, ActionSheetContainer);\n\n    var _this = _possibleConstructorReturn(this, (ActionSheetContainer.__proto__ || Object.getPrototypeOf(ActionSheetContainer)).call(this, props));\n\n    _this.state = {\n      modalVisible: false,\n      items: []\n    };\n    return _this;\n  }\n\n  _createClass(ActionSheetContainer, [{\n    key: \"showActionSheet\",\n    value: function showActionSheet(config, callback) {\n      if (_reactNative.Platform.OS === \"ios\") {\n        if (typeof config.options[0] == \"object\") {\n          var options = config.options;\n          var filtered = options.map(function (item) {\n            return item.text;\n          });\n          config.options = filtered;\n\n          _reactNative.ActionSheetIOS.showActionSheetWithOptions(config, callback);\n        } else {\n          _reactNative.ActionSheetIOS.showActionSheetWithOptions(config, callback);\n        }\n      } else {\n        this.setState({\n          items: config.options,\n          title: config.title,\n          message: config.message,\n          destructiveButtonIndex: config.destructiveButtonIndex,\n          cancelButtonIndex: config.cancelButtonIndex,\n          modalVisible: true,\n          callback: callback\n        });\n      }\n    }\n  }, {\n    key: \"hideActionSheet\",\n    value: function hideActionSheet() {\n      this.setState({\n        modalVisible: false\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (!this.props.autoHide && this.props.duration) {\n        console.warn(\"It's not recommended to set autoHide false with duration\");\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return _react2.default.createElement(_reactNative.Modal, {\n        animationType: \"fade\",\n        transparent: true,\n        visible: this.state.modalVisible,\n        onRequestClose: function onRequestClose() {\n          _this2.state.callback(_this2.state.cancelButtonIndex);\n\n          _this2.setState({\n            modalVisible: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        }\n      }, _react2.default.createElement(_reactNative.TouchableOpacity, {\n        activeOpacity: 1,\n        onPress: function onPress() {\n          _this2.state.callback(_this2.state.cancelButtonIndex);\n\n          _this2.setState({\n            modalVisible: false\n          });\n        },\n        style: {\n          backgroundColor: \"rgba(0,0,0,0.4)\",\n          flex: 1,\n          justifyContent: \"flex-end\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        }\n      }, _react2.default.createElement(_reactNative.TouchableOpacity, {\n        activeOpacity: 1,\n        style: {\n          backgroundColor: \"#fff\",\n          minHeight: 56,\n          height: this.state.items.length * 80,\n          maxHeight: _reactNative.Dimensions.get(\"window\").height / 2,\n          padding: 15,\n          elevation: 4\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        }\n      }, this.state.title ? _react2.default.createElement(_Text.Text, {\n        style: {\n          color: \"#757575\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        }\n      }, this.state.title) : null, _react2.default.createElement(_reactNative.FlatList, {\n        style: {\n          marginHorizontal: -15,\n          marginTop: this.state.title ? 15 : 0\n        },\n        data: this.state.items,\n        keyExtractor: function keyExtractor(item, index) {\n          return String(index);\n        },\n        renderItem: function renderItem(_ref) {\n          var index = _ref.index,\n              item = _ref.item;\n          return typeof _this2.state.items[0] === \"string\" ? _react2.default.createElement(_ListItem.ListItem, {\n            onPress: function onPress() {\n              _this2.state.callback(parseInt(index));\n\n              _this2.setState({\n                modalVisible: false\n              });\n            },\n            style: {\n              borderColor: \"transparent\",\n              marginLeft: 14\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 119\n            }\n          }, _react2.default.createElement(_Text.Text, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 126\n            }\n          }, item)) : _react2.default.createElement(_ListItem.ListItem, {\n            onPress: function onPress() {\n              _this2.state.callback(parseInt(index));\n\n              _this2.setState({\n                modalVisible: false\n              });\n            },\n            style: {\n              borderColor: \"transparent\",\n              marginLeft: 14,\n              height: 50\n            },\n            icon: true,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 129\n            }\n          }, _react2.default.createElement(_Left.Left, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 141\n            }\n          }, _react2.default.createElement(_Icon.Icon, {\n            name: item.icon,\n            style: {\n              color: item.iconColor ? item.iconColor : undefined\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 142\n            }\n          })), _react2.default.createElement(_Body.Body, {\n            style: {\n              borderColor: \"transparent\",\n              paddingLeft: 7\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 149\n            }\n          }, _react2.default.createElement(_Text.Text, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 152\n            }\n          }, item.text)), _react2.default.createElement(_Right.Right, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 154\n            }\n          }));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        }\n      }))));\n    }\n  }], [{\n    key: \"show\",\n    value: function show(config, callback) {\n      this.actionsheetInstance._root.showActionSheet(config, callback);\n    }\n  }, {\n    key: \"hide\",\n    value: function hide() {\n      this.actionsheetInstance._root.hideActionSheet();\n    }\n  }]);\n\n  return ActionSheetContainer;\n}(_react.Component);\n\nActionSheetContainer.propTypes = _extends({}, _reactNative.ViewPropTypes, {\n  style: _propTypes2.default.oneOfType([_propTypes2.default.object, _propTypes2.default.number, _propTypes2.default.array])\n});\nvar StyledActionSheetContainer = (0, _nativeBaseShoutemTheme.connectStyle)(\"NativeBase.ActionSheetContainer\", {}, _mapPropsToStyleNames2.default)(ActionSheetContainer);\nexports.ActionSheetContainer = StyledActionSheetContainer;","map":null,"metadata":{},"sourceType":"script"}