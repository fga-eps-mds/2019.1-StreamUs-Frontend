{"ast":null,"code":"function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n/**\n * Copyright (c) 2016-present, Nicolas Gallagher.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\n\nimport { canUseDOM } from 'fbjs/lib/ExecutionEnvironment';\nimport modality from './modality';\n\nvar WebStyleSheet =\n/*#__PURE__*/\nfunction () {\n  function WebStyleSheet(id) {\n    this._cssRules = [];\n    this._sheet = null;\n    this._textContent = '';\n    var domStyleElement; // on the client we check for an existing style sheet before injecting\n\n    if (canUseDOM) {\n      domStyleElement = document.getElementById(id);\n\n      if (!domStyleElement) {\n        var html = \"<style id=\\\"\" + id + \"\\\"></style>\";\n\n        if (document.head) {\n          document.head.insertAdjacentHTML('afterbegin', html);\n          domStyleElement = document.getElementById(id);\n        }\n      }\n\n      if (domStyleElement) {\n        modality(domStyleElement); // $FlowFixMe\n\n        this._sheet = domStyleElement.sheet;\n        this._textContent = domStyleElement.textContent;\n      }\n    }\n  }\n\n  var _proto = WebStyleSheet.prototype;\n\n  _proto.containsRule = function containsRule(rule) {\n    return this._cssRules.indexOf(rule) > -1;\n  };\n\n  _proto.insertRuleOnce = function insertRuleOnce(rule, position) {\n    // Reduce chance of duplicate rules\n    if (!this.containsRule(rule)) {\n      this._cssRules.push(rule); // Check whether a rule was part of any prerendered styles (textContent\n      // doesn't include styles injected via 'insertRule')\n\n\n      if (this._textContent.indexOf(rule) === -1 && this._sheet) {\n        var pos = position || this._sheet.cssRules.length;\n\n        try {\n          this._sheet.insertRule(rule, pos);\n        } catch (e) {\n          if (process.env.NODE_ENV !== 'production') {\n            console.warn(\"Failed to inject CSS: \\\"\" + rule + \"\\\". The browser may have rejecting unrecognized vendor prefixes. (This should have no user-facing impact.)\");\n          }\n        }\n      }\n    }\n  };\n\n  _createClass(WebStyleSheet, [{\n    key: \"cssText\",\n    get: function get() {\n      return this._cssRules.join('\\n');\n    }\n  }]);\n\n  return WebStyleSheet;\n}();\n\nexport { WebStyleSheet as default };","map":{"version":3,"sources":["/home/ygor/Documents/FGA/eps/2019.1-StreamUs-Frontend/node_modules/react-native-web/dist/exports/StyleSheet/WebStyleSheet.js"],"names":["_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","Constructor","protoProps","staticProps","prototype","canUseDOM","modality","WebStyleSheet","id","_cssRules","_sheet","_textContent","domStyleElement","document","getElementById","html","head","insertAdjacentHTML","sheet","textContent","_proto","containsRule","rule","indexOf","insertRuleOnce","position","push","pos","cssRules","insertRule","e","process","env","NODE_ENV","console","warn","get","join","default"],"mappings":"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","sourcesContent":["function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n * Copyright (c) 2016-present, Nicolas Gallagher.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nimport { canUseDOM } from 'fbjs/lib/ExecutionEnvironment';\nimport modality from './modality';\n\nvar WebStyleSheet =\n/*#__PURE__*/\nfunction () {\n  function WebStyleSheet(id) {\n    this._cssRules = [];\n    this._sheet = null;\n    this._textContent = '';\n    var domStyleElement; // on the client we check for an existing style sheet before injecting\n\n    if (canUseDOM) {\n      domStyleElement = document.getElementById(id);\n\n      if (!domStyleElement) {\n        var html = \"<style id=\\\"\" + id + \"\\\"></style>\";\n\n        if (document.head) {\n          document.head.insertAdjacentHTML('afterbegin', html);\n          domStyleElement = document.getElementById(id);\n        }\n      }\n\n      if (domStyleElement) {\n        modality(domStyleElement); // $FlowFixMe\n\n        this._sheet = domStyleElement.sheet;\n        this._textContent = domStyleElement.textContent;\n      }\n    }\n  }\n\n  var _proto = WebStyleSheet.prototype;\n\n  _proto.containsRule = function containsRule(rule) {\n    return this._cssRules.indexOf(rule) > -1;\n  };\n\n  _proto.insertRuleOnce = function insertRuleOnce(rule, position) {\n    // Reduce chance of duplicate rules\n    if (!this.containsRule(rule)) {\n      this._cssRules.push(rule); // Check whether a rule was part of any prerendered styles (textContent\n      // doesn't include styles injected via 'insertRule')\n\n\n      if (this._textContent.indexOf(rule) === -1 && this._sheet) {\n        var pos = position || this._sheet.cssRules.length;\n\n        try {\n          this._sheet.insertRule(rule, pos);\n        } catch (e) {\n          if (process.env.NODE_ENV !== 'production') {\n            console.warn(\"Failed to inject CSS: \\\"\" + rule + \"\\\". The browser may have rejecting unrecognized vendor prefixes. (This should have no user-facing impact.)\");\n          }\n        }\n      }\n    }\n  };\n\n  _createClass(WebStyleSheet, [{\n    key: \"cssText\",\n    get: function get() {\n      return this._cssRules.join('\\n');\n    }\n  }]);\n\n  return WebStyleSheet;\n}();\n\nexport { WebStyleSheet as default };"]},"metadata":{},"sourceType":"module"}