{"ast":null,"code":"'use strict';\n\nvar isObj = require('is-obj');\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n  if (val === null || val === undefined) {\n    throw new TypeError('Sources cannot be null or undefined');\n  }\n\n  return Object(val);\n}\n\nfunction assignKey(to, from, key) {\n  var val = from[key];\n\n  if (val === undefined || val === null) {\n    return;\n  }\n\n  if (hasOwnProperty.call(to, key)) {\n    if (to[key] === undefined || to[key] === null) {\n      throw new TypeError('Cannot convert undefined or null to object (' + key + ')');\n    }\n  }\n\n  if (!hasOwnProperty.call(to, key) || !isObj(val)) {\n    to[key] = val;\n  } else {\n    to[key] = assign(Object(to[key]), from[key]);\n  }\n}\n\nfunction assign(to, from) {\n  if (to === from) {\n    return to;\n  }\n\n  from = Object(from);\n\n  for (var key in from) {\n    if (hasOwnProperty.call(from, key)) {\n      assignKey(to, from, key);\n    }\n  }\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(from);\n\n    for (var i = 0; i < symbols.length; i++) {\n      if (propIsEnumerable.call(from, symbols[i])) {\n        assignKey(to, from, symbols[i]);\n      }\n    }\n  }\n\n  return to;\n}\n\nmodule.exports = function deepAssign(target) {\n  target = toObject(target);\n\n  for (var s = 1; s < arguments.length; s++) {\n    assign(target, arguments[s]);\n  }\n\n  return target;\n};","map":null,"metadata":{},"sourceType":"script"}