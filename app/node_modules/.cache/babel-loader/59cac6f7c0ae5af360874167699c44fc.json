{"ast":null,"code":"Object.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Item = undefined;\nvar _jsxFileName = \"src/basic/Item.js\";\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require(\"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require(\"prop-types\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _reactNative = require(\"react-native\");\n\nvar _Input = require(\"./Input\");\n\nvar _Label = require(\"./Label\");\n\nvar _Icon = require(\"./Icon\");\n\nvar _Thumbnail = require(\"./Thumbnail\");\n\nvar _nativeBaseShoutemTheme = require(\"native-base-shoutem-theme\");\n\nvar _platform = require(\"../theme/variables/platform\");\n\nvar _platform2 = _interopRequireDefault(_platform);\n\nvar _computeProps = require(\"../utils/computeProps\");\n\nvar _computeProps2 = _interopRequireDefault(_computeProps);\n\nvar _mapPropsToStyleNames = require(\"../utils/mapPropsToStyleNames\");\n\nvar _mapPropsToStyleNames2 = _interopRequireDefault(_mapPropsToStyleNames);\n\nvar _lodash = require(\"lodash\");\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar Item = function (_Component) {\n  _inherits(Item, _Component);\n\n  function Item(props) {\n    _classCallCheck(this, Item);\n\n    var _this = _possibleConstructorReturn(this, (Item.__proto__ || Object.getPrototypeOf(Item)).call(this, props));\n\n    _this.state = {\n      text: \"\",\n      topAnim: new _reactNative.Animated.Value(18),\n      opacAnim: new _reactNative.Animated.Value(1)\n    };\n    return _this;\n  }\n\n  _createClass(Item, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (this.props.floatingLabel) {\n        if (this.inputProps && this.inputProps.value) {\n          this.setState({\n            isFocused: true\n          });\n          this.floatUp(-16);\n        }\n\n        if (this.inputProps && this.inputProps.getRef) this.inputProps.getRef(this._inputRef);\n      }\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      var _this2 = this;\n\n      var childrenArray = _react2.default.Children.toArray(nextProps.children);\n\n      var inputProps = {};\n\n      _lodash2.default.remove(childrenArray, function (item) {\n        if (item.type.displayName === \"Styled(Input)\") {\n          inputProps = item.props;\n          _this2.inputProps = item.props;\n          return item;\n        }\n      });\n\n      if (this.props.floatingLabel) {\n        if (this.inputProps && this.inputProps.value) {\n          this.setState({\n            isFocused: true\n          });\n          this.floatUp(-16);\n        }\n\n        if (this.inputProps && this.inputProps.getRef) this.inputProps.getRef(this._inputRef);\n      }\n    }\n  }, {\n    key: \"floatBack\",\n    value: function floatBack() {\n      _reactNative.Animated.timing(this.state.topAnim, {\n        toValue: 18,\n        duration: 150\n      }).start();\n\n      _reactNative.Animated.timing(this.state.opacAnim, {\n        toValue: 1,\n        duration: 150\n      }).start();\n    }\n  }, {\n    key: \"floatUp\",\n    value: function floatUp(e) {\n      _reactNative.Animated.timing(this.state.topAnim, {\n        toValue: e || -22,\n        duration: 150\n      }).start();\n\n      _reactNative.Animated.timing(this.state.opacAnim, {\n        toValue: 0.7,\n        duration: 150\n      }).start();\n    }\n  }, {\n    key: \"renderLabel\",\n    value: function renderLabel(label, labelProps) {\n      var newLabel = [];\n\n      var labelStyle = _reactNative.StyleSheet.flatten([{\n        fontSize: 15,\n        lineHeight: 30\n      }, labelProps.style]);\n\n      if (this.props.floatingLabel) {\n        if (this.state.isFocused) {\n          newLabel.push(_react2.default.createElement(_Label.Label, _extends({}, labelProps, {\n            key: \"newFLabel\",\n            float: true,\n            style: labelStyle\n          })));\n          this.floatUp(-16);\n        } else {\n          newLabel.push(label);\n          this.floatBack();\n        }\n      } else {\n        newLabel.push(_react2.default.createElement(_Label.Label, _extends({}, labelProps, {\n          key: \"newLabel\"\n        })));\n      }\n\n      return newLabel;\n    }\n  }, {\n    key: \"renderChildren\",\n    value: function renderChildren() {\n      var _this3 = this;\n\n      var newChildren = [];\n\n      var childrenArray = _react2.default.Children.toArray(this.props.children);\n\n      var label = [];\n      var labelProps = {};\n      label = _lodash2.default.remove(childrenArray, function (item) {\n        if (item.type === _Label.Label) {\n          labelProps = item.props;\n          return item;\n        }\n      });\n      var input = [];\n      var inputProps = {};\n      input = _lodash2.default.remove(childrenArray, function (item) {\n        if (item.type === _Input.Input) {\n          inputProps = item.props;\n          _this3.inputProps = item.props;\n          return item;\n        }\n      });\n      var icon = [];\n      var iconProps = {};\n      icon = _lodash2.default.remove(childrenArray, function (item) {\n        if (item.type === _Icon.Icon) {\n          iconProps = item.props;\n          return item;\n        }\n      });\n      var image = [];\n      var imageProps = {};\n      image = _lodash2.default.remove(childrenArray, function (item) {\n        if (item.type === _Thumbnail.Thumbnail) {\n          imageProps = item.props;\n          return item;\n        }\n      });\n\n      if (this.props.floatingLabel && icon.length) {\n        var isIcon = false;\n\n        for (var i = 0; i < this.props.children.length; i++) {\n          if (this.props.children[i].props.name && this.props.children[i].type.displayName !== \"Styled(Input)\") {\n            isIcon = true;\n            newChildren.push(_react2.default.createElement(_Icon.Icon, _extends({\n              key: [i]\n            }, this.props.children[i].props, {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 160\n              }\n            })));\n          }\n\n          if (this.props.children[i].props.children) {\n            newChildren.push(_react2.default.createElement(_reactNative.Animated.View, {\n              key: \"float\",\n              style: {\n                position: \"absolute\",\n                left: this.props.last && isIcon ? 40 : this.props.last ? 15 : isIcon ? 26 : 0,\n                right: 0,\n                top: this.state.topAnim,\n                opacity: this.state.opacAnim,\n                paddingTop: _reactNative.Platform.OS === \"ios\" ? undefined : undefined,\n                paddingBottom: _reactNative.Platform.OS === \"ios\" ? undefined : 12\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 165\n              }\n            }, _react2.default.createElement(_Label.Label, _extends({}, labelProps, {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 184\n              }\n            }), this.renderLabel(label, labelProps))));\n            newChildren.push(_react2.default.createElement(_Input.Input, _extends({\n              ref: function ref(c) {\n                return _this3._inputRef = c;\n              },\n              key: \"l2\"\n            }, inputProps, {\n              onFocus: function onFocus() {\n                _this3.setState({\n                  isFocused: true\n                });\n\n                inputProps.onFocus && inputProps.onFocus();\n              },\n              onBlur: function onBlur(e) {\n                inputProps.value ? _this3.setState({\n                  isFocused: true\n                }) : !_this3.state.text.length && _this3.setState({\n                  isFocused: false\n                });\n                inputProps.onBlur && inputProps.onBlur(e);\n              },\n              onChangeText: function onChangeText(text) {\n                _this3.setState({\n                  text: text\n                });\n\n                inputProps.onChangeText && inputProps.onChangeText(text);\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 190\n              }\n            })));\n          }\n        }\n      } else if (this.props.floatingLabel && image.length) {\n        var isImage = false;\n\n        for (var _i = 0; _i < this.props.children.length; _i++) {\n          if (this.props.children[_i].type.displayName === \"Styled(Thumbnail)\") {\n            isImage = true;\n            newChildren.push(_react2.default.createElement(_Thumbnail.Thumbnail, _extends({\n              small: true,\n              key: [_i]\n            }, this.props.children[_i].props, {\n              style: {\n                right: 10,\n                left: _i == this.props.children.length - 1 ? undefined : 0\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 221\n              }\n            })));\n          }\n\n          if (this.props.children[_i].props.children) {\n            newChildren.push(_react2.default.createElement(_reactNative.Animated.View, {\n              key: \"float\",\n              style: {\n                position: \"absolute\",\n                left: this.props.last && isImage ? 57 : this.props.last ? 15 : isImage ? 42 : 0,\n                right: 0,\n                top: this.state.topAnim,\n                opacity: this.state.opacAnim,\n                paddingTop: _reactNative.Platform.OS === \"ios\" ? undefined : undefined,\n                paddingBottom: _reactNative.Platform.OS === \"ios\" ? undefined : 12\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 236\n              }\n            }, _react2.default.createElement(_Label.Label, _extends({}, labelProps, {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 255\n              }\n            }), this.renderLabel(label, labelProps))));\n            newChildren.push(_react2.default.createElement(_Input.Input, _extends({\n              ref: function ref(c) {\n                return _this3._inputRef = c;\n              },\n              key: \"l2\"\n            }, inputProps, {\n              onFocus: function onFocus() {\n                _this3.setState({\n                  isFocused: true\n                });\n\n                inputProps.onFocus && inputProps.onFocus();\n              },\n              onBlur: function onBlur(e) {\n                inputProps.value ? _this3.setState({\n                  isFocused: true\n                }) : !_this3.state.text.length && _this3.setState({\n                  isFocused: false\n                });\n                inputProps.onBlur && inputProps.onBlur(e);\n              },\n              onChangeText: function onChangeText(text) {\n                _this3.setState({\n                  text: text\n                });\n\n                inputProps.onChangeText && inputProps.onChangeText(text);\n              },\n              style: {\n                left: this.props.last && isImage ? 10 : this.props.last ? 4 : isImage ? 10 : 0,\n                marginRight: 12\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 261\n              }\n            })));\n          }\n        }\n      } else if (this.props.floatingLabel) {\n        newChildren.push(_react2.default.createElement(_reactNative.Animated.View, {\n          key: \"float\",\n          style: {\n            position: \"absolute\",\n            left: this.props.last ? 15 : 0,\n            right: 0,\n            top: this.state.topAnim,\n            opacity: this.state.opacAnim,\n            paddingTop: _reactNative.Platform.OS === \"ios\" ? undefined : undefined,\n            paddingBottom: _reactNative.Platform.OS === \"ios\" ? undefined : 12\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 298\n          }\n        }, _react2.default.createElement(_Label.Label, _extends({}, labelProps, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 310\n          }\n        }), this.renderLabel(label, labelProps))));\n        newChildren.push(_react2.default.createElement(_Input.Input, _extends({\n          ref: function ref(c) {\n            return _this3._inputRef = c;\n          },\n          value: this.state.text,\n          key: \"l2\"\n        }, inputProps, {\n          onFocus: function onFocus() {\n            _this3.setState({\n              isFocused: true\n            });\n\n            inputProps.onFocus && inputProps.onFocus();\n          },\n          onBlur: function onBlur(e) {\n            inputProps.value ? _this3.setState({\n              isFocused: true\n            }) : !_this3.state.text.length && _this3.setState({\n              isFocused: false\n            });\n            inputProps.onBlur && inputProps.onBlur(e);\n          },\n          onChangeText: function onChangeText(text) {\n            _this3.setState({\n              text: text\n            });\n\n            inputProps.onChangeText && inputProps.onChangeText(text);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 314\n          }\n        })));\n      } else if (this.props.stackedLabel && icon.length) {\n        newChildren.push(_react2.default.createElement(_reactNative.View, {\n          key: \"s\",\n          style: {\n            flexDirection: \"row\",\n            flex: 1,\n            width: _platform2.default.deviceWidth - 15\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 339\n          }\n        }, _react2.default.createElement(_Icon.Icon, _extends({\n          key: \"s1\"\n        }, iconProps, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 347\n          }\n        })), _react2.default.createElement(_reactNative.View, {\n          style: {\n            flexDirection: \"column\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 348\n          }\n        }, _react2.default.createElement(_Label.Label, _extends({\n          key: \"s2\"\n        }, labelProps, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 349\n          }\n        })), _react2.default.createElement(_Input.Input, _extends({\n          key: \"s3\"\n        }, inputProps, {\n          style: {\n            width: _platform2.default.deviceWidth - 40\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 350\n          }\n        })))));\n      } else {\n        return this.props.children;\n      }\n\n      return newChildren;\n    }\n  }, {\n    key: \"getInitialStyle\",\n    value: function getInitialStyle() {\n      return {\n        roundedInputGroup: {\n          borderWidth: this.props.rounded ? _platform2.default.borderWidth * 2 : undefined,\n          borderRadius: this.props.rounded ? _platform2.default.inputGroupRoundedBorderRadius : undefined\n        }\n      };\n    }\n  }, {\n    key: \"prepareRootProps\",\n    value: function prepareRootProps() {\n      var defaultProps = {\n        style: this.getInitialStyle().roundedInputGroup\n      };\n      return (0, _computeProps2.default)(this.props, defaultProps);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      return _react2.default.createElement(_reactNative.TouchableOpacity, _extends({\n        ref: function ref(c) {\n          return _this4._root = c;\n        }\n      }, this.prepareRootProps(), {\n        activeOpacity: 1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 383\n        }\n      }), this.renderChildren());\n    }\n  }]);\n\n  return Item;\n}(_react.Component);\n\nvar childrenType = function childrenType(props, propName, component) {\n  var error = void 0;\n  var prop = props[propName];\n\n  if (!props.children.length) {\n    error = new Error(component + \" should have both Label and Input components\");\n  } else if (props.children[0].type.displayName !== \"Styled(Label)\" || props.children[1].type.displayName !== \"Styled(Input)\") {\n    error = new Error(component + \" should have Label and Input components only\");\n  }\n\n  return error;\n};\n\nItem.propTypes = _extends({}, _reactNative.TouchableOpacity.propTypes, {\n  style: _propTypes2.default.oneOfType([_propTypes2.default.object, _propTypes2.default.number, _propTypes2.default.array]),\n  inlineLabel: _propTypes2.default.bool,\n  floatingLabel: _propTypes2.default.bool,\n  stackedLabel: _propTypes2.default.bool,\n  fixedLabel: _propTypes2.default.bool,\n  success: _propTypes2.default.bool,\n  error: _propTypes2.default.bool\n});\nvar StyledItem = (0, _nativeBaseShoutemTheme.connectStyle)(\"NativeBase.Item\", {}, _mapPropsToStyleNames2.default)(Item);\nexports.Item = StyledItem;","map":null,"metadata":{},"sourceType":"script"}