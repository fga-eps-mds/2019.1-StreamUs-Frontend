{"ast":null,"code":"var Class = require('../../core/class');\n\nvar Path = require('../../core/path');\n\nvar CanvasPath = Class(Path, {\n  initialize: function initialize(path) {\n    this.reset();\n\n    if (path instanceof CanvasPath) {\n      this.path = path.path.slice(0);\n    } else if (path) {\n      if (path.applyToPath) path.applyToPath(this);else this.push(path);\n    }\n  },\n  onReset: function onReset() {\n    this.path = [];\n  },\n  onMove: function onMove(sx, sy, x, y) {\n    this.path.push(function (context) {\n      context.moveTo(x, y);\n    });\n  },\n  onLine: function onLine(sx, sy, x, y) {\n    this.path.push(function (context) {\n      context.lineTo(x, y);\n    });\n  },\n  onBezierCurve: function onBezierCurve(sx, sy, p1x, p1y, p2x, p2y, x, y) {\n    this.path.push(function (context) {\n      context.bezierCurveTo(p1x, p1y, p2x, p2y, x, y);\n    });\n  },\n  _arcToBezier: Path.prototype.onArc,\n  onArc: function onArc(sx, sy, ex, ey, cx, cy, rx, ry, sa, ea, ccw, rotation) {\n    if (rx != ry || rotation) return this._arcToBezier(sx, sy, ex, ey, cx, cy, rx, ry, sa, ea, ccw, rotation);\n    this.path.push(function (context) {\n      context.arc(cx, cy, rx, sa, ea, ccw);\n    });\n  },\n  onClose: function onClose() {\n    this.path.push(function (context) {\n      context.closePath();\n    });\n  },\n  toCommands: function toCommands() {\n    return this.path.slice(0);\n  }\n});\nmodule.exports = CanvasPath;","map":null,"metadata":{},"sourceType":"script"}