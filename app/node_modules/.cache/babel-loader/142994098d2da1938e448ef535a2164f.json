{"ast":null,"code":"Object.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Fab = undefined;\nvar _jsxFileName = \"src/basic/Fab.js\";\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require(\"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require(\"prop-types\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _computeProps = require(\"../utils/computeProps\");\n\nvar _computeProps2 = _interopRequireDefault(_computeProps);\n\nvar _reactNative = require(\"react-native\");\n\nvar _Icon = require(\"./Icon\");\n\nvar _IconNB = require(\"./IconNB\");\n\nvar _Button = require(\"./Button\");\n\nvar _platform = require(\"./../theme/variables/platform\");\n\nvar _platform2 = _interopRequireDefault(_platform);\n\nvar _lodash = require(\"lodash\");\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _mapPropsToStyleNames = require(\"../utils/mapPropsToStyleNames\");\n\nvar _mapPropsToStyleNames2 = _interopRequireDefault(_mapPropsToStyleNames);\n\nvar _nativeBaseShoutemTheme = require(\"native-base-shoutem-theme\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar _Dimensions$get = _reactNative.Dimensions.get(\"window\"),\n    height = _Dimensions$get.height,\n    width = _Dimensions$get.width;\n\nvar AnimatedFab = _reactNative.Animated.createAnimatedComponent(_Button.Button);\n\nvar Fab = function (_Component) {\n  _inherits(Fab, _Component);\n\n  function Fab(props) {\n    _classCallCheck(this, Fab);\n\n    var _this = _possibleConstructorReturn(this, (Fab.__proto__ || Object.getPrototypeOf(Fab)).call(this, props));\n\n    _this.containerHeight = new _reactNative.Animated.Value(56);\n    _this.containerWidth = new _reactNative.Animated.Value(0);\n    _this.buttonScale = new _reactNative.Animated.Value(0);\n    _this.state = {\n      buttons: undefined,\n      active: false\n    };\n    return _this;\n  }\n\n  _createClass(Fab, [{\n    key: \"fabTopValue\",\n    value: function fabTopValue(pos) {\n      if (pos === \"topLeft\") {\n        return {\n          top: 20,\n          bottom: undefined,\n          left: 20,\n          right: undefined\n        };\n      } else if (pos === \"bottomRight\") {\n        return {\n          top: undefined,\n          bottom: 20,\n          left: undefined,\n          right: 20\n        };\n      } else if (pos === \"bottomLeft\") {\n        return {\n          top: undefined,\n          bottom: 20,\n          left: 20,\n          right: undefined\n        };\n      } else if (pos === \"topRight\") {\n        return {\n          top: 20,\n          bottom: undefined,\n          left: undefined,\n          right: 20\n        };\n      }\n    }\n  }, {\n    key: \"fabOtherBtns\",\n    value: function fabOtherBtns(direction, i) {\n      if (direction === \"up\") {\n        return {\n          top: undefined,\n          bottom: this.props.active === false ? _reactNative.Platform.OS === \"ios\" ? 50 : 5 : i * 50 + 65,\n          left: 8,\n          right: 0\n        };\n      } else if (direction === \"left\") {\n        return {\n          top: 8,\n          bottom: 0,\n          left: this.props.active === false ? _reactNative.Platform.OS === \"ios\" ? 8 : 8 : -(i * 50 + 58),\n          right: 0\n        };\n      } else if (direction === \"down\") {\n        return {\n          top: this.props.active === false ? _reactNative.Platform.OS === \"ios\" ? 50 : 8 : i * 50 + 73,\n          bottom: 0,\n          left: 8,\n          right: 0\n        };\n      } else if (direction === \"right\") {\n        return {\n          top: 8,\n          bottom: 0,\n          left: this.props.active === false ? _reactNative.Platform.OS === \"ios\" ? 50 : 8 : i * 50 + 73,\n          right: 0\n        };\n      }\n    }\n  }, {\n    key: \"getInitialStyle\",\n    value: function getInitialStyle(iconStyle) {\n      return {\n        fab: {\n          height: 56,\n          width: 56,\n          borderRadius: 28,\n          elevation: 4,\n          shadowColor: \"#000\",\n          shadowOffset: {\n            width: 0,\n            height: 2\n          },\n          shadowOpacity: 0.4,\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          shadowRadius: 2,\n          position: \"absolute\",\n          bottom: 0,\n          backgroundColor: \"blue\"\n        },\n        container: {\n          position: \"absolute\",\n          top: this.props.position ? this.fabTopValue(this.props.position).top : undefined,\n          bottom: this.props.position ? this.fabTopValue(this.props.position).bottom : 20,\n          right: this.props.position ? this.fabTopValue(this.props.position).right : 20,\n          left: this.props.position ? this.fabTopValue(this.props.position).left : undefined,\n          width: 56,\n          height: this.containerHeight,\n          flexDirection: this.props.direction ? this.props.direction === \"left\" || this.props.direction === \"right\" ? \"row\" : \"column\" : \"column\",\n          alignItems: \"center\"\n        },\n        iconStyle: _extends({\n          color: \"#fff\",\n          fontSize: 24,\n          lineHeight: _reactNative.Platform.OS == \"ios\" ? 27 : undefined\n        }, iconStyle),\n        buttonStyle: {\n          position: \"absolute\",\n          height: 40,\n          width: 40,\n          left: 7,\n          borderRadius: 20,\n          transform: this.state.active ? [{\n            scale: new _reactNative.Animated.Value(1)\n          }] : [{\n            scale: this.buttonScale\n          }],\n          marginBottom: 10,\n          backgroundColor: \"blue\"\n        }\n      };\n    }\n  }, {\n    key: \"getContainerStyle\",\n    value: function getContainerStyle() {\n      return _lodash2.default.merge(this.getInitialStyle().container, this.props.containerStyle);\n    }\n  }, {\n    key: \"prepareFabProps\",\n    value: function prepareFabProps() {\n      var defaultProps = {\n        style: this.getInitialStyle().fab\n      };\n\n      var incomingProps = _lodash2.default.clone(this.props);\n\n      delete incomingProps.onPress;\n      return (0, _computeProps2.default)(incomingProps, defaultProps);\n    }\n  }, {\n    key: \"getOtherButtonStyle\",\n    value: function getOtherButtonStyle(child, i) {\n      var type = {\n        top: this.props.direction ? this.fabOtherBtns(this.props.direction, i).top : undefined,\n        left: this.props.direction ? this.fabOtherBtns(this.props.direction, i).left : 8,\n        right: this.props.direction ? this.fabOtherBtns(this.props.direction, i).right : 0,\n        bottom: this.props.direction ? this.fabOtherBtns(this.props.direction, i).bottom : this.props.active === false ? _reactNative.Platform.OS === \"ios\" ? 8 : 8 : i * 50 + 50\n      };\n      return _lodash2.default.merge(this.getInitialStyle().buttonStyle, _reactNative.StyleSheet.flatten(child.props.style), type);\n    }\n  }, {\n    key: \"prepareButtonProps\",\n    value: function prepareButtonProps(child) {\n      var inp = _lodash2.default.clone(child.props);\n\n      delete inp.style;\n      var defaultProps = {};\n      return (0, _computeProps2.default)(inp, defaultProps);\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var childrenArray = _react2.default.Children.toArray(this.props.children);\n\n      var icon = _lodash2.default.remove(childrenArray, function (item) {\n        if (item.type.displayName === \"Styled(Button)\") {\n          return true;\n        }\n      });\n\n      this.setState({\n        buttons: icon.length\n      });\n      this.activeTimer = setTimeout(function () {\n        _this2.setState({\n          active: _this2.props.active\n        });\n      }, 0);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this.activeTimer) {\n        clearTimeout(this.activeTimer);\n      }\n    }\n  }, {\n    key: \"renderFab\",\n    value: function renderFab() {\n      var childrenArray = _react2.default.Children.toArray(this.props.children);\n\n      var icon = _lodash2.default.remove(childrenArray, function (item) {\n        if (item.type.displayName === \"Styled(Button)\") {\n          return true;\n        }\n      });\n\n      return _react2.default.cloneElement(childrenArray[0], {\n        style: this.getInitialStyle(childrenArray[0].props.style).iconStyle\n      });\n    }\n  }, {\n    key: \"renderButtons\",\n    value: function renderButtons() {\n      var _this3 = this;\n\n      var childrenArray = _react2.default.Children.toArray(this.props.children);\n\n      var newChildren = [];\n      {\n        childrenArray.slice(1).map(function (child, i) {\n          newChildren.push(_react2.default.createElement(AnimatedFab, _extends({\n            style: _this3.getOtherButtonStyle(child, i)\n          }, _this3.prepareButtonProps(child, i), {\n            fabButton: true,\n            key: i,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 281\n            }\n          }), child.props.children));\n        });\n      }\n      return newChildren;\n    }\n  }, {\n    key: \"upAnimate\",\n    value: function upAnimate() {\n      if (!this.props.active) {\n        _reactNative.Animated.spring(this.containerHeight, {\n          toValue: this.state.buttons * 51.3 + 56\n        }).start();\n\n        _reactNative.Animated.spring(this.buttonScale, {\n          toValue: 1\n        }).start();\n      } else {\n        this.setState({\n          active: false\n        });\n\n        _reactNative.Animated.spring(this.containerHeight, {\n          toValue: 56\n        }).start();\n\n        _reactNative.Animated.spring(this.buttonScale, {\n          toValue: 0\n        }).start();\n      }\n    }\n  }, {\n    key: \"leftAnimate\",\n    value: function leftAnimate() {\n      if (!this.props.active) {\n        _reactNative.Animated.spring(this.containerWidth, {\n          toValue: this.state.buttons * 51.3 + 56\n        }).start();\n\n        _reactNative.Animated.spring(this.buttonScale, {\n          toValue: 1\n        }).start();\n      } else {\n        this.setState({\n          active: false\n        });\n\n        _reactNative.Animated.spring(this.containerHeight, {\n          toValue: 56\n        }).start();\n\n        _reactNative.Animated.spring(this.buttonScale, {\n          toValue: 0\n        }).start();\n      }\n    }\n  }, {\n    key: \"rightAnimate\",\n    value: function rightAnimate() {\n      if (!this.props.active) {\n        _reactNative.Animated.spring(this.containerWidth, {\n          toValue: this.state.buttons * 51.3 + 56\n        }).start();\n\n        _reactNative.Animated.spring(this.buttonScale, {\n          toValue: 1\n        }).start();\n      } else {\n        this.setState({\n          active: false\n        });\n\n        _reactNative.Animated.spring(this.containerHeight, {\n          toValue: 56\n        }).start();\n\n        _reactNative.Animated.spring(this.buttonScale, {\n          toValue: 0\n        }).start();\n      }\n    }\n  }, {\n    key: \"downAnimate\",\n    value: function downAnimate() {\n      if (!this.props.active) {\n        _reactNative.Animated.spring(this.containerHeight, {\n          toValue: 56\n        }).start();\n\n        _reactNative.Animated.spring(this.buttonScale, {\n          toValue: 1\n        }).start();\n      } else {\n        this.setState({\n          active: false\n        });\n\n        _reactNative.Animated.spring(this.containerHeight, {\n          toValue: 56\n        }).start();\n\n        _reactNative.Animated.spring(this.buttonScale, {\n          toValue: 0\n        }).start();\n      }\n    }\n  }, {\n    key: \"_animate\",\n    value: function _animate() {\n      var _props = this.props,\n          direction = _props.direction,\n          position = _props.position;\n\n      if (this.props.direction) {\n        if (this.props.direction === \"up\") {\n          this.upAnimate();\n        } else if (this.props.direction === \"left\") {\n          this.leftAnimate();\n        } else if (this.props.direction === \"right\") {\n          this.rightAnimate();\n        } else if (this.props.direction === \"down\") {\n          this.downAnimate();\n        }\n      } else {\n        this.upAnimate();\n      }\n    }\n  }, {\n    key: \"fabOnPress\",\n    value: function fabOnPress() {\n      var _this4 = this;\n\n      if (this.props.onPress) {\n        this.props.onPress();\n\n        this._animate();\n\n        this.activeTimer = setTimeout(function () {\n          _this4.setState({\n            active: _this4.props.active\n          });\n        }, 100);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this5 = this;\n\n      var active = this.props.active;\n      return _react2.default.createElement(_reactNative.Animated.View, {\n        style: this.getContainerStyle(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 426\n        }\n      }, this.renderButtons(), _reactNative.Platform.OS === \"ios\" || _platform2.default.androidRipple === false || _reactNative.Platform[\"Version\"] <= 21 ? _react2.default.createElement(_reactNative.TouchableOpacity, _extends({\n        onPress: function onPress() {\n          return _this5.fabOnPress();\n        }\n      }, this.prepareFabProps(), {\n        activeOpacity: 1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 431\n        }\n      }), this.renderFab()) : _react2.default.createElement(_reactNative.TouchableNativeFeedback, _extends({\n        onPress: function onPress() {\n          return _this5.fabOnPress();\n        },\n        background: _reactNative.TouchableNativeFeedback.Ripple(_platform2.default.androidRippleColor, false)\n      }, this.prepareFabProps(), {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 439\n        }\n      }), _react2.default.createElement(_reactNative.View, {\n        style: [this.getInitialStyle().fab, this.props.style],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 444\n        }\n      }, this.renderFab())));\n    }\n  }]);\n\n  return Fab;\n}(_react.Component);\n\nvar StyledFab = (0, _nativeBaseShoutemTheme.connectStyle)(\"NativeBase.Fab\", {}, _mapPropsToStyleNames2.default)(Fab);\nexports.Fab = StyledFab;","map":null,"metadata":{},"sourceType":"script"}