{"ast":null,"code":"/**\n * Copyright (c) 2016-present, Nicolas Gallagher.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nimport normalizeColor from '../../modules/normalizeColor';\nimport normalizeValue from './normalizeValue';\nimport resolveShadowValue from './resolveShadowValue';\n/**\n * The browser implements the CSS cascade, where the order of properties is a\n * factor in determining which styles to paint. React Native is different. It\n * gives giving precedence to the more specific style property. For example,\n * the value of `paddingTop` takes precedence over that of `padding`.\n *\n * This module creates mutally exclusive style declarations by expanding all of\n * React Native's supported shortform properties (e.g. `padding`) to their\n * longfrom equivalents.\n */\n\nvar emptyObject = {};\nvar styleShortFormProperties = {\n  borderColor: ['borderTopColor', 'borderRightColor', 'borderBottomColor', 'borderLeftColor'],\n  borderRadius: ['borderTopLeftRadius', 'borderTopRightRadius', 'borderBottomRightRadius', 'borderBottomLeftRadius'],\n  borderStyle: ['borderTopStyle', 'borderRightStyle', 'borderBottomStyle', 'borderLeftStyle'],\n  borderWidth: ['borderTopWidth', 'borderRightWidth', 'borderBottomWidth', 'borderLeftWidth'],\n  margin: ['marginTop', 'marginRight', 'marginBottom', 'marginLeft'],\n  marginHorizontal: ['marginRight', 'marginLeft'],\n  marginVertical: ['marginTop', 'marginBottom'],\n  overflow: ['overflowX', 'overflowY'],\n  overscrollBehavior: ['overscrollBehaviorX', 'overscrollBehaviorY'],\n  padding: ['paddingTop', 'paddingRight', 'paddingBottom', 'paddingLeft'],\n  paddingHorizontal: ['paddingRight', 'paddingLeft'],\n  paddingVertical: ['paddingTop', 'paddingBottom'],\n  writingDirection: ['direction']\n};\nvar colorProps = {\n  backgroundColor: true,\n  borderColor: true,\n  borderTopColor: true,\n  borderRightColor: true,\n  borderBottomColor: true,\n  borderLeftColor: true,\n  color: true\n};\nvar borderWidthProps = {\n  borderWidth: true,\n  borderTopWidth: true,\n  borderRightWidth: true,\n  borderBottomWidth: true,\n  borderLeftWidth: true\n};\nvar monospaceFontStack = 'monospace, monospace';\nvar systemFontStack = 'system-ui, -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Ubuntu, \"Helvetica Neue\", sans-serif';\nvar defaultOffset = {\n  height: 0,\n  width: 0\n};\n/**\n * Shadow\n */\n\nvar resolveShadow = function resolveShadow(resolvedStyle, style) {\n  var boxShadow = style.boxShadow;\n  var shadow = resolveShadowValue(style);\n  resolvedStyle.boxShadow = boxShadow ? boxShadow + \", \" + shadow : shadow;\n};\n/**\n * Text Decoration\n */\n\n\nvar resolveTextDecoration = function resolveTextDecoration(resolvedStyle, style) {\n  var textDecorationColor = style.textDecorationColor,\n      textDecorationLine = style.textDecorationLine,\n      textDecorationStyle = style.textDecorationStyle;\n  var color = normalizeColor(textDecorationColor);\n\n  if (textDecorationLine) {\n    // use 'text-decoration' for browsers that support CSS2 text-decoration (e.g., IE, Edge)\n    resolvedStyle.textDecoration = textDecorationLine;\n\n    if (textDecorationColor) {\n      resolvedStyle.textDecorationColor = color;\n    }\n\n    if (textDecorationStyle) {\n      resolvedStyle.textDecorationStyle = textDecorationStyle;\n    }\n  }\n};\n/**\n * Text Shadow\n */\n\n\nvar resolveTextShadow = function resolveTextShadow(resolvedStyle, style) {\n  var textShadowColor = style.textShadowColor,\n      textShadowOffset = style.textShadowOffset,\n      textShadowRadius = style.textShadowRadius;\n\n  var _ref = textShadowOffset || defaultOffset,\n      height = _ref.height,\n      width = _ref.width;\n\n  var offsetX = normalizeValue(null, width);\n  var offsetY = normalizeValue(null, height);\n  var blurRadius = normalizeValue(null, textShadowRadius || 0);\n  var color = normalizeColor(textShadowColor);\n\n  if (color && (height !== 0 || width !== 0)) {\n    resolvedStyle.textShadow = offsetX + \" \" + offsetY + \" \" + blurRadius + \" \" + color;\n  }\n};\n/**\n * Transform\n */\n// { scale: 2 } => 'scale(2)'\n// { translateX: 20 } => 'translateX(20px)'\n\n\nvar mapTransform = function mapTransform(transform) {\n  var type = Object.keys(transform)[0];\n  var value = normalizeValue(type, transform[type]);\n  return type + \"(\" + value + \")\";\n}; // [1,2,3,4,5,6] => 'matrix3d(1,2,3,4,5,6)'\n\n\nvar convertTransformMatrix = function convertTransformMatrix(transformMatrix) {\n  var matrix = transformMatrix.join(',');\n  return \"matrix3d(\" + matrix + \")\";\n};\n\nvar resolveTransform = function resolveTransform(resolvedStyle, style) {\n  var transform = style.transform;\n\n  if (Array.isArray(style.transform)) {\n    transform = style.transform.map(mapTransform).join(' ');\n  } else if (style.transformMatrix) {\n    transform = convertTransformMatrix(style.transformMatrix);\n  }\n\n  resolvedStyle.transform = transform;\n};\n/**\n * Reducer\n */\n\n\nvar createReducer = function createReducer(style, styleProps) {\n  var hasResolvedShadow = false;\n  var hasResolvedTextDecoration = false;\n  var hasResolvedTextShadow = false;\n  return function (resolvedStyle, prop) {\n    var value = normalizeValue(prop, style[prop]); // Make sure the default border width is explicitly set to '0' to avoid\n    // falling back to any unwanted user-agent styles.\n\n    if (borderWidthProps[prop]) {\n      value = value == null ? normalizeValue(null, 0) : value;\n    } // Normalize color values\n\n\n    if (colorProps[prop]) {\n      value = normalizeColor(value);\n    } // Ignore everything else with a null value\n\n\n    if (value == null) {\n      return resolvedStyle;\n    }\n\n    switch (prop) {\n      // Ignore some React Native styles\n      case 'aspectRatio':\n      case 'elevation':\n      case 'overlayColor':\n      case 'resizeMode':\n      case 'tintColor':\n        {\n          break;\n        }\n      // TODO: remove once this issue is fixed\n      // https://github.com/rofrischmann/inline-style-prefixer/issues/159\n\n      case 'backgroundClip':\n        {\n          if (value === 'text') {\n            resolvedStyle.backgroundClip = value;\n            resolvedStyle.WebkitBackgroundClip = value;\n          }\n\n          break;\n        }\n\n      case 'display':\n        {\n          resolvedStyle.display = value; // A flex container in React Native has these defaults which should be\n          // set only if there is no otherwise supplied flex style.\n\n          if (style.display === 'flex' && style.flex == null) {\n            if (style.flexShrink == null) {\n              resolvedStyle.flexShrink = 0;\n            }\n\n            if (style.flexBasis == null) {\n              resolvedStyle.flexBasis = 'auto';\n            }\n          }\n\n          break;\n        }\n      // The 'flex' property value in React Native must be a positive integer,\n      // 0, or -1.\n\n      case 'flex':\n        {\n          if (value > 0) {\n            resolvedStyle.flexGrow = value;\n            resolvedStyle.flexShrink = 1;\n            resolvedStyle.flexBasis = '0%';\n          } else if (value === 0) {\n            resolvedStyle.flexGrow = 0;\n            resolvedStyle.flexShrink = 0;\n            resolvedStyle.flexBasis = '0%';\n          } else if (value === -1) {\n            resolvedStyle.flexGrow = 0;\n            resolvedStyle.flexShrink = 1;\n            resolvedStyle.flexBasis = 'auto';\n          }\n\n          break;\n        }\n\n      case 'fontFamily':\n        {\n          if (value.indexOf('System') > -1) {\n            var stack = value.split(/\\s*,\\s*/);\n            stack[stack.indexOf('System')] = systemFontStack;\n            resolvedStyle.fontFamily = stack.join(', ');\n          } else if (value === 'monospace') {\n            resolvedStyle.fontFamily = monospaceFontStack;\n          } else {\n            resolvedStyle.fontFamily = value;\n          }\n\n          break;\n        }\n\n      case 'fontVariant':\n        {\n          if (Array.isArray(value) && value.length > 0) {\n            resolvedStyle.fontVariant = value.join(' ');\n          }\n\n          break;\n        }\n\n      case 'shadowColor':\n      case 'shadowOffset':\n      case 'shadowOpacity':\n      case 'shadowRadius':\n        {\n          if (!hasResolvedShadow) {\n            resolveShadow(resolvedStyle, style);\n          }\n\n          hasResolvedShadow = true;\n          break;\n        }\n\n      case 'textAlignVertical':\n        {\n          resolvedStyle.verticalAlign = value === 'center' ? 'middle' : value;\n          break;\n        }\n\n      case 'textDecorationColor':\n      case 'textDecorationLine':\n      case 'textDecorationStyle':\n        {\n          if (!hasResolvedTextDecoration) {\n            resolveTextDecoration(resolvedStyle, style);\n          }\n\n          hasResolvedTextDecoration = true;\n          break;\n        }\n\n      case 'textShadowColor':\n      case 'textShadowOffset':\n      case 'textShadowRadius':\n        {\n          if (!hasResolvedTextShadow) {\n            resolveTextShadow(resolvedStyle, style);\n          }\n\n          hasResolvedTextShadow = true;\n          break;\n        }\n\n      case 'transform':\n      case 'transformMatrix':\n        {\n          resolveTransform(resolvedStyle, style);\n          break;\n        }\n\n      default:\n        {\n          var longFormProperties = styleShortFormProperties[prop];\n\n          if (longFormProperties) {\n            longFormProperties.forEach(function (longForm, i) {\n              // The value of any longform property in the original styles takes\n              // precedence over the shortform's value.\n              if (styleProps.indexOf(longForm) === -1) {\n                resolvedStyle[longForm] = value;\n              }\n            });\n          } else {\n            resolvedStyle[prop] = value;\n          }\n        }\n    }\n\n    return resolvedStyle;\n  };\n};\n\nvar createReactDOMStyle = function createReactDOMStyle(style) {\n  if (!style) {\n    return emptyObject;\n  }\n\n  var styleProps = Object.keys(style);\n  var sortedStyleProps = styleProps.sort();\n  var reducer = createReducer(style, styleProps);\n  var resolvedStyle = sortedStyleProps.reduce(reducer, {});\n  return resolvedStyle;\n};\n\nexport default createReactDOMStyle;","map":{"version":3,"sources":["/home/ygor/Documents/FGA/eps/2019.1-StreamUs-Frontend/node_modules/react-native-web/dist/exports/StyleSheet/createReactDOMStyle.js"],"names":["normalizeColor","normalizeValue","resolveShadowValue","emptyObject","styleShortFormProperties","borderColor","borderRadius","borderStyle","borderWidth","margin","marginHorizontal","marginVertical","overflow","overscrollBehavior","padding","paddingHorizontal","paddingVertical","writingDirection","colorProps","backgroundColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","color","borderWidthProps","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","monospaceFontStack","systemFontStack","defaultOffset","height","width","resolveShadow","resolvedStyle","style","boxShadow","shadow","resolveTextDecoration","textDecorationColor","textDecorationLine","textDecorationStyle","textDecoration","resolveTextShadow","textShadowColor","textShadowOffset","textShadowRadius","_ref","offsetX","offsetY","blurRadius","textShadow","mapTransform","transform","type","Object","keys","value","convertTransformMatrix","transformMatrix","matrix","join","resolveTransform","Array","isArray","map","createReducer","styleProps","hasResolvedShadow","hasResolvedTextDecoration","hasResolvedTextShadow","prop","backgroundClip","WebkitBackgroundClip","display","flex","flexShrink","flexBasis","flexGrow","indexOf","stack","split","fontFamily","length","fontVariant","verticalAlign","longFormProperties","forEach","longForm","i","createReactDOMStyle","sortedStyleProps","sort","reducer","reduce"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) 2016-present, Nicolas Gallagher.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nimport normalizeColor from '../../modules/normalizeColor';\nimport normalizeValue from './normalizeValue';\nimport resolveShadowValue from './resolveShadowValue';\n/**\n * The browser implements the CSS cascade, where the order of properties is a\n * factor in determining which styles to paint. React Native is different. It\n * gives giving precedence to the more specific style property. For example,\n * the value of `paddingTop` takes precedence over that of `padding`.\n *\n * This module creates mutally exclusive style declarations by expanding all of\n * React Native's supported shortform properties (e.g. `padding`) to their\n * longfrom equivalents.\n */\n\nvar emptyObject = {};\nvar styleShortFormProperties = {\n  borderColor: ['borderTopColor', 'borderRightColor', 'borderBottomColor', 'borderLeftColor'],\n  borderRadius: ['borderTopLeftRadius', 'borderTopRightRadius', 'borderBottomRightRadius', 'borderBottomLeftRadius'],\n  borderStyle: ['borderTopStyle', 'borderRightStyle', 'borderBottomStyle', 'borderLeftStyle'],\n  borderWidth: ['borderTopWidth', 'borderRightWidth', 'borderBottomWidth', 'borderLeftWidth'],\n  margin: ['marginTop', 'marginRight', 'marginBottom', 'marginLeft'],\n  marginHorizontal: ['marginRight', 'marginLeft'],\n  marginVertical: ['marginTop', 'marginBottom'],\n  overflow: ['overflowX', 'overflowY'],\n  overscrollBehavior: ['overscrollBehaviorX', 'overscrollBehaviorY'],\n  padding: ['paddingTop', 'paddingRight', 'paddingBottom', 'paddingLeft'],\n  paddingHorizontal: ['paddingRight', 'paddingLeft'],\n  paddingVertical: ['paddingTop', 'paddingBottom'],\n  writingDirection: ['direction']\n};\nvar colorProps = {\n  backgroundColor: true,\n  borderColor: true,\n  borderTopColor: true,\n  borderRightColor: true,\n  borderBottomColor: true,\n  borderLeftColor: true,\n  color: true\n};\nvar borderWidthProps = {\n  borderWidth: true,\n  borderTopWidth: true,\n  borderRightWidth: true,\n  borderBottomWidth: true,\n  borderLeftWidth: true\n};\nvar monospaceFontStack = 'monospace, monospace';\nvar systemFontStack = 'system-ui, -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Ubuntu, \"Helvetica Neue\", sans-serif';\nvar defaultOffset = {\n  height: 0,\n  width: 0\n};\n/**\n * Shadow\n */\n\nvar resolveShadow = function resolveShadow(resolvedStyle, style) {\n  var boxShadow = style.boxShadow;\n  var shadow = resolveShadowValue(style);\n  resolvedStyle.boxShadow = boxShadow ? boxShadow + \", \" + shadow : shadow;\n};\n/**\n * Text Decoration\n */\n\n\nvar resolveTextDecoration = function resolveTextDecoration(resolvedStyle, style) {\n  var textDecorationColor = style.textDecorationColor,\n      textDecorationLine = style.textDecorationLine,\n      textDecorationStyle = style.textDecorationStyle;\n  var color = normalizeColor(textDecorationColor);\n\n  if (textDecorationLine) {\n    // use 'text-decoration' for browsers that support CSS2 text-decoration (e.g., IE, Edge)\n    resolvedStyle.textDecoration = textDecorationLine;\n\n    if (textDecorationColor) {\n      resolvedStyle.textDecorationColor = color;\n    }\n\n    if (textDecorationStyle) {\n      resolvedStyle.textDecorationStyle = textDecorationStyle;\n    }\n  }\n};\n/**\n * Text Shadow\n */\n\n\nvar resolveTextShadow = function resolveTextShadow(resolvedStyle, style) {\n  var textShadowColor = style.textShadowColor,\n      textShadowOffset = style.textShadowOffset,\n      textShadowRadius = style.textShadowRadius;\n\n  var _ref = textShadowOffset || defaultOffset,\n      height = _ref.height,\n      width = _ref.width;\n\n  var offsetX = normalizeValue(null, width);\n  var offsetY = normalizeValue(null, height);\n  var blurRadius = normalizeValue(null, textShadowRadius || 0);\n  var color = normalizeColor(textShadowColor);\n\n  if (color && (height !== 0 || width !== 0)) {\n    resolvedStyle.textShadow = offsetX + \" \" + offsetY + \" \" + blurRadius + \" \" + color;\n  }\n};\n/**\n * Transform\n */\n// { scale: 2 } => 'scale(2)'\n// { translateX: 20 } => 'translateX(20px)'\n\n\nvar mapTransform = function mapTransform(transform) {\n  var type = Object.keys(transform)[0];\n  var value = normalizeValue(type, transform[type]);\n  return type + \"(\" + value + \")\";\n}; // [1,2,3,4,5,6] => 'matrix3d(1,2,3,4,5,6)'\n\n\nvar convertTransformMatrix = function convertTransformMatrix(transformMatrix) {\n  var matrix = transformMatrix.join(',');\n  return \"matrix3d(\" + matrix + \")\";\n};\n\nvar resolveTransform = function resolveTransform(resolvedStyle, style) {\n  var transform = style.transform;\n\n  if (Array.isArray(style.transform)) {\n    transform = style.transform.map(mapTransform).join(' ');\n  } else if (style.transformMatrix) {\n    transform = convertTransformMatrix(style.transformMatrix);\n  }\n\n  resolvedStyle.transform = transform;\n};\n/**\n * Reducer\n */\n\n\nvar createReducer = function createReducer(style, styleProps) {\n  var hasResolvedShadow = false;\n  var hasResolvedTextDecoration = false;\n  var hasResolvedTextShadow = false;\n  return function (resolvedStyle, prop) {\n    var value = normalizeValue(prop, style[prop]); // Make sure the default border width is explicitly set to '0' to avoid\n    // falling back to any unwanted user-agent styles.\n\n    if (borderWidthProps[prop]) {\n      value = value == null ? normalizeValue(null, 0) : value;\n    } // Normalize color values\n\n\n    if (colorProps[prop]) {\n      value = normalizeColor(value);\n    } // Ignore everything else with a null value\n\n\n    if (value == null) {\n      return resolvedStyle;\n    }\n\n    switch (prop) {\n      // Ignore some React Native styles\n      case 'aspectRatio':\n      case 'elevation':\n      case 'overlayColor':\n      case 'resizeMode':\n      case 'tintColor':\n        {\n          break;\n        }\n      // TODO: remove once this issue is fixed\n      // https://github.com/rofrischmann/inline-style-prefixer/issues/159\n\n      case 'backgroundClip':\n        {\n          if (value === 'text') {\n            resolvedStyle.backgroundClip = value;\n            resolvedStyle.WebkitBackgroundClip = value;\n          }\n\n          break;\n        }\n\n      case 'display':\n        {\n          resolvedStyle.display = value; // A flex container in React Native has these defaults which should be\n          // set only if there is no otherwise supplied flex style.\n\n          if (style.display === 'flex' && style.flex == null) {\n            if (style.flexShrink == null) {\n              resolvedStyle.flexShrink = 0;\n            }\n\n            if (style.flexBasis == null) {\n              resolvedStyle.flexBasis = 'auto';\n            }\n          }\n\n          break;\n        }\n      // The 'flex' property value in React Native must be a positive integer,\n      // 0, or -1.\n\n      case 'flex':\n        {\n          if (value > 0) {\n            resolvedStyle.flexGrow = value;\n            resolvedStyle.flexShrink = 1;\n            resolvedStyle.flexBasis = '0%';\n          } else if (value === 0) {\n            resolvedStyle.flexGrow = 0;\n            resolvedStyle.flexShrink = 0;\n            resolvedStyle.flexBasis = '0%';\n          } else if (value === -1) {\n            resolvedStyle.flexGrow = 0;\n            resolvedStyle.flexShrink = 1;\n            resolvedStyle.flexBasis = 'auto';\n          }\n\n          break;\n        }\n\n      case 'fontFamily':\n        {\n          if (value.indexOf('System') > -1) {\n            var stack = value.split(/\\s*,\\s*/);\n            stack[stack.indexOf('System')] = systemFontStack;\n            resolvedStyle.fontFamily = stack.join(', ');\n          } else if (value === 'monospace') {\n            resolvedStyle.fontFamily = monospaceFontStack;\n          } else {\n            resolvedStyle.fontFamily = value;\n          }\n\n          break;\n        }\n\n      case 'fontVariant':\n        {\n          if (Array.isArray(value) && value.length > 0) {\n            resolvedStyle.fontVariant = value.join(' ');\n          }\n\n          break;\n        }\n\n      case 'shadowColor':\n      case 'shadowOffset':\n      case 'shadowOpacity':\n      case 'shadowRadius':\n        {\n          if (!hasResolvedShadow) {\n            resolveShadow(resolvedStyle, style);\n          }\n\n          hasResolvedShadow = true;\n          break;\n        }\n\n      case 'textAlignVertical':\n        {\n          resolvedStyle.verticalAlign = value === 'center' ? 'middle' : value;\n          break;\n        }\n\n      case 'textDecorationColor':\n      case 'textDecorationLine':\n      case 'textDecorationStyle':\n        {\n          if (!hasResolvedTextDecoration) {\n            resolveTextDecoration(resolvedStyle, style);\n          }\n\n          hasResolvedTextDecoration = true;\n          break;\n        }\n\n      case 'textShadowColor':\n      case 'textShadowOffset':\n      case 'textShadowRadius':\n        {\n          if (!hasResolvedTextShadow) {\n            resolveTextShadow(resolvedStyle, style);\n          }\n\n          hasResolvedTextShadow = true;\n          break;\n        }\n\n      case 'transform':\n      case 'transformMatrix':\n        {\n          resolveTransform(resolvedStyle, style);\n          break;\n        }\n\n      default:\n        {\n          var longFormProperties = styleShortFormProperties[prop];\n\n          if (longFormProperties) {\n            longFormProperties.forEach(function (longForm, i) {\n              // The value of any longform property in the original styles takes\n              // precedence over the shortform's value.\n              if (styleProps.indexOf(longForm) === -1) {\n                resolvedStyle[longForm] = value;\n              }\n            });\n          } else {\n            resolvedStyle[prop] = value;\n          }\n        }\n    }\n\n    return resolvedStyle;\n  };\n};\n\nvar createReactDOMStyle = function createReactDOMStyle(style) {\n  if (!style) {\n    return emptyObject;\n  }\n\n  var styleProps = Object.keys(style);\n  var sortedStyleProps = styleProps.sort();\n  var reducer = createReducer(style, styleProps);\n  var resolvedStyle = sortedStyleProps.reduce(reducer, {});\n  return resolvedStyle;\n};\n\nexport default createReactDOMStyle;"]},"metadata":{},"sourceType":"module"}