{"ast":null,"code":"/**\n * Copyright (c) 2015-present, Nicolas Gallagher.\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nimport EdgeInsetsPropType from '../EdgeInsetsPropType';\nimport StyleSheetPropType from '../../modules/StyleSheetPropType';\nimport ViewStylePropTypes from './ViewStylePropTypes';\nimport { any, array, arrayOf, bool, func, object, oneOf, oneOfType, string } from 'prop-types';\nvar stylePropType = StyleSheetPropType(ViewStylePropTypes);\nvar ViewPropTypes = {\n  accessibilityComponentType: string,\n  accessibilityLabel: string,\n  accessibilityLiveRegion: oneOf(['assertive', 'none', 'polite']),\n  accessibilityRole: string,\n  accessibilityStates: arrayOf(oneOf(['disabled', 'selected',\n  /* web-only */\n  'busy', 'checked', 'expanded', 'grabbed', 'invalid', 'pressed'])),\n  accessibilityTraits: oneOfType([array, string]),\n  accessible: bool,\n  children: any,\n  hitSlop: EdgeInsetsPropType,\n  importantForAccessibility: oneOf(['auto', 'no', 'no-hide-descendants', 'yes']),\n  nativeID: string,\n  onBlur: func,\n  onClick: func,\n  onClickCapture: func,\n  onContextMenu: func,\n  onFocus: func,\n  onLayout: func,\n  onMoveShouldSetResponder: func,\n  onMoveShouldSetResponderCapture: func,\n  onResponderGrant: func,\n  onResponderMove: func,\n  onResponderReject: func,\n  onResponderRelease: func,\n  onResponderTerminate: func,\n  onResponderTerminationRequest: func,\n  onStartShouldSetResponder: func,\n  onStartShouldSetResponderCapture: func,\n  onTouchCancel: func,\n  onTouchCancelCapture: func,\n  onTouchEnd: func,\n  onTouchEndCapture: func,\n  onTouchMove: func,\n  onTouchMoveCapture: func,\n  onTouchStart: func,\n  onTouchStartCapture: func,\n  pointerEvents: oneOf(['auto', 'box-none', 'box-only', 'none']),\n  style: stylePropType,\n  testID: string,\n  // compatibility with React Native\n  accessibilityViewIsModal: bool,\n  collapsable: bool,\n  needsOffscreenAlphaCompositing: bool,\n  onAccessibilityTap: func,\n  onMagicTap: func,\n  removeClippedSubviews: bool,\n  renderToHardwareTextureAndroid: bool,\n  shouldRasterizeIOS: bool,\n  tvParallaxProperties: object\n};\nexport default ViewPropTypes;","map":{"version":3,"sources":["/usr/app/streamUs/node_modules/react-native-web/dist/exports/View/ViewPropTypes.js"],"names":["EdgeInsetsPropType","StyleSheetPropType","ViewStylePropTypes","any","array","arrayOf","bool","func","object","oneOf","oneOfType","string","stylePropType","ViewPropTypes","accessibilityComponentType","accessibilityLabel","accessibilityLiveRegion","accessibilityRole","accessibilityStates","accessibilityTraits","accessible","children","hitSlop","importantForAccessibility","nativeID","onBlur","onClick","onClickCapture","onContextMenu","onFocus","onLayout","onMoveShouldSetResponder","onMoveShouldSetResponderCapture","onResponderGrant","onResponderMove","onResponderReject","onResponderRelease","onResponderTerminate","onResponderTerminationRequest","onStartShouldSetResponder","onStartShouldSetResponderCapture","onTouchCancel","onTouchCancelCapture","onTouchEnd","onTouchEndCapture","onTouchMove","onTouchMoveCapture","onTouchStart","onTouchStartCapture","pointerEvents","style","testID","accessibilityViewIsModal","collapsable","needsOffscreenAlphaCompositing","onAccessibilityTap","onMagicTap","removeClippedSubviews","renderToHardwareTextureAndroid","shouldRasterizeIOS","tvParallaxProperties"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) 2015-present, Nicolas Gallagher.\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nimport EdgeInsetsPropType from '../EdgeInsetsPropType';\nimport StyleSheetPropType from '../../modules/StyleSheetPropType';\nimport ViewStylePropTypes from './ViewStylePropTypes';\nimport { any, array, arrayOf, bool, func, object, oneOf, oneOfType, string } from 'prop-types';\nvar stylePropType = StyleSheetPropType(ViewStylePropTypes);\nvar ViewPropTypes = {\n  accessibilityComponentType: string,\n  accessibilityLabel: string,\n  accessibilityLiveRegion: oneOf(['assertive', 'none', 'polite']),\n  accessibilityRole: string,\n  accessibilityStates: arrayOf(oneOf(['disabled', 'selected',\n  /* web-only */\n  'busy', 'checked', 'expanded', 'grabbed', 'invalid', 'pressed'])),\n  accessibilityTraits: oneOfType([array, string]),\n  accessible: bool,\n  children: any,\n  hitSlop: EdgeInsetsPropType,\n  importantForAccessibility: oneOf(['auto', 'no', 'no-hide-descendants', 'yes']),\n  nativeID: string,\n  onBlur: func,\n  onClick: func,\n  onClickCapture: func,\n  onContextMenu: func,\n  onFocus: func,\n  onLayout: func,\n  onMoveShouldSetResponder: func,\n  onMoveShouldSetResponderCapture: func,\n  onResponderGrant: func,\n  onResponderMove: func,\n  onResponderReject: func,\n  onResponderRelease: func,\n  onResponderTerminate: func,\n  onResponderTerminationRequest: func,\n  onStartShouldSetResponder: func,\n  onStartShouldSetResponderCapture: func,\n  onTouchCancel: func,\n  onTouchCancelCapture: func,\n  onTouchEnd: func,\n  onTouchEndCapture: func,\n  onTouchMove: func,\n  onTouchMoveCapture: func,\n  onTouchStart: func,\n  onTouchStartCapture: func,\n  pointerEvents: oneOf(['auto', 'box-none', 'box-only', 'none']),\n  style: stylePropType,\n  testID: string,\n  // compatibility with React Native\n  accessibilityViewIsModal: bool,\n  collapsable: bool,\n  needsOffscreenAlphaCompositing: bool,\n  onAccessibilityTap: func,\n  onMagicTap: func,\n  removeClippedSubviews: bool,\n  renderToHardwareTextureAndroid: bool,\n  shouldRasterizeIOS: bool,\n  tvParallaxProperties: object\n};\nexport default ViewPropTypes;"]},"metadata":{},"sourceType":"module"}