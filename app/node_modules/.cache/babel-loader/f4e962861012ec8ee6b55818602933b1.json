{"ast":null,"code":"'use strict';\n\nimport _classCallCheck from \"/usr/app/streamUs/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/usr/app/streamUs/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/usr/app/streamUs/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/usr/app/streamUs/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/usr/app/streamUs/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/usr/app/streamUs/node_modules/react-native-easy-grid/Components/Grid.js\";\nimport React, { Component } from 'react';\nimport { View, TouchableOpacity } from 'react-native';\nimport computeProps from '../Utils/computeProps';\nimport Col from './Col';\nimport Row from './Row';\n\nvar GridNB =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(GridNB, _Component);\n\n  function GridNB() {\n    _classCallCheck(this, GridNB);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(GridNB).apply(this, arguments));\n  }\n\n  _createClass(GridNB, [{\n    key: \"prepareRootProps\",\n    value: function prepareRootProps() {\n      var type = {\n        flex: 1,\n        flexDirection: this.ifRow() ? 'column' : 'row'\n      };\n      var defaultProps = {\n        style: type\n      };\n      return computeProps(this.props, defaultProps);\n    }\n  }, {\n    key: \"ifRow\",\n    value: function ifRow() {\n      var row = false;\n      React.Children.forEach(this.props.children, function (child) {\n        if (child && child.type == Row) row = true;\n      });\n      return row;\n    }\n  }, {\n    key: \"setNativeProps\",\n    value: function setNativeProps(nativeProps) {\n      this._root.setNativeProps(nativeProps);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      if (this.props.onPress) {\n        return React.createElement(TouchableOpacity, {\n          onPress: this.props.onPress,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42\n          },\n          __self: this\n        }, React.createElement(View, Object.assign({\n          ref: function ref(component) {\n            return _this._root = component;\n          }\n        }, this.props, this.prepareRootProps(), {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43\n          },\n          __self: this\n        }), this.props.children));\n      } else {\n        return React.createElement(View, Object.assign({\n          ref: function ref(component) {\n            return _this._root = component;\n          }\n        }, this.props, this.prepareRootProps(), {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53\n          },\n          __self: this\n        }), this.props.children);\n      }\n    }\n  }]);\n\n  return GridNB;\n}(Component);\n\nexport { GridNB as default };","map":{"version":3,"sources":["/usr/app/streamUs/node_modules/react-native-easy-grid/Components/Grid.js"],"names":["React","Component","View","TouchableOpacity","computeProps","Col","Row","GridNB","type","flex","flexDirection","ifRow","defaultProps","style","props","row","Children","forEach","children","child","nativeProps","_root","setNativeProps","onPress","component","prepareRootProps"],"mappings":"AAAA;;;;;;;;AAEA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,IAAR,EAAcC,gBAAd,QAAqC,cAArC;AACA,OAAOC,YAAP,MAAyB,uBAAzB;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAOC,GAAP,MAAgB,OAAhB;;IAGqBC,M;;;;;;;;;;;;;uCACE;AAEf,UAAIC,IAAI,GAAG;AACPC,QAAAA,IAAI,EAAE,CADC;AAEPC,QAAAA,aAAa,EAAE,KAAKC,KAAL,KAAe,QAAf,GAA0B;AAFlC,OAAX;AAKA,UAAIC,YAAY,GAAG;AACfC,QAAAA,KAAK,EAAEL;AADQ,OAAnB;AAIA,aAAOJ,YAAY,CAAC,KAAKU,KAAN,EAAaF,YAAb,CAAnB;AAEH;;;4BAEO;AACJ,UAAIG,GAAG,GAAG,KAAV;AACAf,MAAAA,KAAK,CAACgB,QAAN,CAAeC,OAAf,CAAuB,KAAKH,KAAL,CAAWI,QAAlC,EAA4C,UAAUC,KAAV,EAAiB;AACzD,YAAGA,KAAK,IAAIA,KAAK,CAACX,IAAN,IAAcF,GAA1B,EACIS,GAAG,GAAG,IAAN;AACP,OAHD;AAIA,aAAOA,GAAP;AACH;;;mCAEcK,W,EAAa;AAC1B,WAAKC,KAAL,CAAWC,cAAX,CAA0BF,WAA1B;AACD;;;6BAEM;AAAA;;AACP,UAAG,KAAKN,KAAL,CAAWS,OAAd,EAAsB;AACpB,eACE,oBAAC,gBAAD;AAAkB,UAAA,OAAO,EAAE,KAAKT,KAAL,CAAWS,OAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACJ,oBAAC,IAAD;AACE,UAAA,GAAG,EAAE,aAAAC,SAAS;AAAA,mBAAI,KAAI,CAACH,KAAL,GAAaG,SAAjB;AAAA;AADhB,WAEM,KAAKV,KAFX,EAGM,KAAKW,gBAAL,EAHN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAIE,KAAKX,KAAL,CAAWI,QAJb,CADI,CADF;AASD,OAVD,MAWI;AACF,eACE,oBAAC,IAAD;AACF,UAAA,GAAG,EAAE,aAAAM,SAAS;AAAA,mBAAI,KAAI,CAACH,KAAL,GAAaG,SAAjB;AAAA;AADZ,WAEE,KAAKV,KAFP,EAGE,KAAKW,gBAAL,EAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAIF,KAAKX,KAAL,CAAWI,QAJT,CADF;AAOD;AACF;;;;EAlDiCjB,S;;SAAfM,M","sourcesContent":["'use strict';\n\nimport React, {Component} from 'react';\nimport {View, TouchableOpacity} from 'react-native';\nimport computeProps from '../Utils/computeProps';\nimport Col from './Col';\nimport Row from './Row';\n\n\nexport default class GridNB extends Component {\n    prepareRootProps() {\n\n        var type = {\n            flex: 1,\n            flexDirection: this.ifRow() ? 'column' : 'row'\n        }\n\n        var defaultProps = {\n            style: type\n        }\n\n        return computeProps(this.props, defaultProps);\n\n    }\n\n    ifRow() {\n        var row = false;\n        React.Children.forEach(this.props.children, function (child) {\n            if(child && child.type == Row)\n                row = true;\n        })\n        return row;\n    }\n\n    setNativeProps(nativeProps) {\n      this._root.setNativeProps(nativeProps);\n    }\n\n  render() {\n    if(this.props.onPress){\n      return(\n        <TouchableOpacity onPress={this.props.onPress}>\n    <View\n      ref={component => this._root = component}\n      {...this.props}\n      {...this.prepareRootProps()}\n    >{this.props.children}</View>\n      </TouchableOpacity>\n    );\n    }\n    else{\n      return(\n        <View\n      ref={component => this._root = component}\n      {...this.props}\n      {...this.prepareRootProps()}\n    >{this.props.children}</View>\n    );\n    }\n  }\n\n}\n"]},"metadata":{},"sourceType":"module"}