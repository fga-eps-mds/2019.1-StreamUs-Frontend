{"ast":null,"code":"import _objectWithoutProperties from \"/home/ygor/Documents/FGA/eps/2019.1-StreamUs-Frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _classCallCheck from \"/home/ygor/Documents/FGA/eps/2019.1-StreamUs-Frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/ygor/Documents/FGA/eps/2019.1-StreamUs-Frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/ygor/Documents/FGA/eps/2019.1-StreamUs-Frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/ygor/Documents/FGA/eps/2019.1-StreamUs-Frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/ygor/Documents/FGA/eps/2019.1-StreamUs-Frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _defineProperty from \"/home/ygor/Documents/FGA/eps/2019.1-StreamUs-Frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/ygor/Documents/FGA/eps/2019.1-StreamUs-Frontend/node_modules/react-native-vector-icons/lib/create-icon-set-from-fontawesome5.js\";\nimport React, { PureComponent } from 'react';\nimport { PixelRatio, Platform, processColor } from 'react-native';\nimport PropTypes from 'prop-types';\nimport createIconSet, { DEFAULT_ICON_COLOR, DEFAULT_ICON_SIZE, NativeIconAPI } from './create-icon-set';\nimport ensureNativeModuleAvailable from './ensure-native-module-available';\nexport var FA5Style = {\n  regular: 0,\n  light: 1,\n  solid: 2,\n  brand: 3\n};\nexport function createFA5iconSet(glyphMap) {\n  var metadata = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var proVersion = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  var familyName = \"Font Awesome 5 \".concat(proVersion ? 'Pro' : 'Free');\n  var metadataKeys = Object.keys(metadata);\n\n  function createFA5iconSubset(type) {\n    var weight = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '400';\n    var family = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : familyName;\n    var fontFileID = proVersion ? \"Pro_\".concat(type) : type;\n    return createIconSet(glyphMap, family, \"FontAwesome5_\".concat(fontFileID, \".ttf\"), {\n      fontWeight: Platform.OS === 'ios' ? weight : undefined\n    });\n  }\n\n  var RegularSet = createFA5iconSubset('Regular');\n  var SolidSet = createFA5iconSubset('Solid', '700');\n  var LightSet = proVersion ? createFA5iconSubset('Light', '100') : RegularSet;\n  var BrandsSet = createFA5iconSubset('Brands', '400', 'Font Awesome 5 Brands');\n\n  function iconSetFromStyle(style) {\n    switch (style) {\n      case FA5Style.brand:\n        return BrandsSet;\n\n      case FA5Style.light:\n        return LightSet;\n\n      case FA5Style.solid:\n        return SolidSet;\n\n      default:\n        return RegularSet;\n    }\n  }\n\n  function iconSetFromFamily(family) {\n    switch (family) {\n      case 'brands':\n        return BrandsSet;\n\n      case 'regular':\n        return LightSet;\n\n      case 'solid':\n        return SolidSet;\n\n      default:\n        return RegularSet;\n    }\n  }\n\n  function styleFromProps(props) {\n    var light = props.light,\n        solid = props.solid;\n    if (light) return FA5Style.light;\n    if (solid) return FA5Style.solid;\n    return FA5Style.regular;\n  }\n\n  function styleToFamily(style) {\n    switch (style) {\n      case FA5Style.brand:\n        return 'brands';\n\n      case FA5Style.light:\n        return 'light';\n\n      case FA5Style.solid:\n        return 'solid';\n\n      default:\n        return 'regular';\n    }\n  }\n\n  function familyToStyle(family) {\n    switch (family) {\n      case 'brands':\n        return FA5Style.brand;\n\n      case 'light':\n        return FA5Style.light;\n\n      case 'solid':\n        return FA5Style.solid;\n\n      default:\n        return FA5Style.regular;\n    }\n  }\n\n  function fallbackForGlyph(glyph) {\n    for (var i = 0; i < metadataKeys.length; i += 1) {\n      var family = metadataKeys[i];\n      if (metadata[family].indexOf(glyph) !== -1) return family;\n    }\n\n    return 'regular';\n  }\n\n  function hasIconForStyle(glyph, style) {\n    var family = styleToFamily(style);\n    if (metadataKeys.indexOf(family) === -1) return false;\n    return metadata[family].indexOf(glyph) !== -1;\n  }\n\n  function getIconSetForProps(props) {\n    var name = props.name;\n    var style = styleFromProps(props);\n    if (hasIconForStyle(name, style)) return iconSetFromStyle(style);\n    var fallbackFamily = fallbackForGlyph(name);\n    return iconSetFromFamily(fallbackFamily);\n  }\n\n  function createFA5iconClass(baseClass) {\n    var selectClass = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function (iconSet) {\n      return iconSet;\n    };\n\n    var FA5iconClass =\n    /*#__PURE__*/\n    function (_PureComponent) {\n      _inherits(FA5iconClass, _PureComponent);\n\n      function FA5iconClass() {\n        _classCallCheck(this, FA5iconClass);\n\n        return _possibleConstructorReturn(this, _getPrototypeOf(FA5iconClass).apply(this, arguments));\n      }\n\n      _createClass(FA5iconClass, [{\n        key: \"render\",\n        value: function render() {\n          var selectedIconSet = getIconSetForProps(this.props);\n          var SelectedIconClass = selectClass(selectedIconSet);\n\n          var _this$props = this.props,\n              light = _this$props.light,\n              solid = _this$props.solid,\n              restProps = _objectWithoutProperties(_this$props, [\"light\", \"solid\"]);\n\n          return React.createElement(SelectedIconClass, Object.assign({}, restProps, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 149\n            },\n            __self: this\n          }));\n        }\n      }]);\n\n      return FA5iconClass;\n    }(PureComponent);\n\n    _defineProperty(FA5iconClass, \"propTypes\", {\n      light: PropTypes.bool,\n      solid: PropTypes.bool\n    });\n\n    _defineProperty(FA5iconClass, \"defaultProps\", {\n      light: false,\n      solid: false\n    });\n\n    return FA5iconClass;\n  }\n\n  var Base = RegularSet;\n  var FA5icon = createFA5iconClass(Base);\n  FA5icon.Button = createFA5iconClass(Base.Button, function (iconSet) {\n    return iconSet.Button;\n  });\n  FA5icon.TabBarItem = createFA5iconClass(Base.TabBarItem, function (iconSet) {\n    return iconSet.TabBarItem;\n  });\n  FA5icon.TabBarItemIOS = createFA5iconClass(Base.TabBarItemIOS, function (iconSet) {\n    return iconSet.TabBarItemIOS;\n  });\n  FA5icon.ToolbarAndroid = createFA5iconClass(Base.ToolbarAndroid, function (iconSet) {\n    return iconSet.ToolbarAndroid;\n  });\n  var imageSourceCache = {};\n\n  function getImageSource(name) {\n    var size = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : DEFAULT_ICON_SIZE;\n    var color = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : DEFAULT_ICON_COLOR;\n    var type = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : FA5Style.regular;\n    ensureNativeModuleAvailable();\n    var style = type;\n\n    if (!hasIconForStyle(name, style)) {\n      var fallbackFamily = fallbackForGlyph(name);\n      style = familyToStyle(fallbackFamily);\n    }\n\n    if (Platform.OS === 'ios' && style !== FA5Style.brand) {\n      var glyph = glyphMap[name] || '?';\n\n      if (typeof glyph === 'number') {\n        glyph = String.fromCharCode(glyph);\n      }\n\n      var processedColor = processColor(color);\n      var cacheKey = \"\".concat(glyph, \":\").concat(size, \":\").concat(processedColor, \":\").concat(type);\n      var scale = PixelRatio.get();\n      return new Promise(function (resolve, reject) {\n        var cached = imageSourceCache[cacheKey];\n\n        if (typeof cached !== 'undefined') {\n          if (!cached || cached instanceof Error) {\n            reject(cached);\n          } else {\n            resolve({\n              uri: cached,\n              scale: scale\n            });\n          }\n        } else {\n          NativeIconAPI.getImageForFontAwesome5(familyName, glyph, size, style, processedColor, function (err, image) {\n            var error = typeof err === 'string' ? new Error(err) : err;\n            imageSourceCache[cacheKey] = image || error || false;\n\n            if (!error && image) {\n              resolve({\n                uri: image,\n                scale: scale\n              });\n            } else {\n              reject(error);\n            }\n          });\n        }\n      });\n    }\n\n    var iconSet = iconSetFromStyle(style);\n    return iconSet.getImageSource(name, size, color);\n  }\n\n  FA5icon.getImageSource = getImageSource;\n  return FA5icon;\n}","map":{"version":3,"sources":["/home/ygor/Documents/FGA/eps/2019.1-StreamUs-Frontend/node_modules/react-native-vector-icons/lib/create-icon-set-from-fontawesome5.js"],"names":["React","PureComponent","PixelRatio","Platform","processColor","PropTypes","createIconSet","DEFAULT_ICON_COLOR","DEFAULT_ICON_SIZE","NativeIconAPI","ensureNativeModuleAvailable","FA5Style","regular","light","solid","brand","createFA5iconSet","glyphMap","metadata","proVersion","familyName","metadataKeys","Object","keys","createFA5iconSubset","type","weight","family","fontFileID","fontWeight","OS","undefined","RegularSet","SolidSet","LightSet","BrandsSet","iconSetFromStyle","style","iconSetFromFamily","styleFromProps","props","styleToFamily","familyToStyle","fallbackForGlyph","glyph","i","length","indexOf","hasIconForStyle","getIconSetForProps","name","fallbackFamily","createFA5iconClass","baseClass","selectClass","iconSet","FA5iconClass","selectedIconSet","SelectedIconClass","restProps","bool","Base","FA5icon","Button","TabBarItem","TabBarItemIOS","ToolbarAndroid","imageSourceCache","getImageSource","size","color","String","fromCharCode","processedColor","cacheKey","scale","get","Promise","resolve","reject","cached","Error","uri","getImageForFontAwesome5","err","image","error"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react';\n\nimport { PixelRatio, Platform, processColor } from 'react-native';\n\nimport PropTypes from 'prop-types';\n\nimport createIconSet, {\n  DEFAULT_ICON_COLOR,\n  DEFAULT_ICON_SIZE,\n  NativeIconAPI,\n} from './create-icon-set';\n\nimport ensureNativeModuleAvailable from './ensure-native-module-available';\n\nexport const FA5Style = {\n  regular: 0,\n  light: 1,\n  solid: 2,\n  brand: 3,\n};\n\nexport function createFA5iconSet(glyphMap, metadata = {}, proVersion = false) {\n  const familyName = `Font Awesome 5 ${proVersion ? 'Pro' : 'Free'}`;\n  const metadataKeys = Object.keys(metadata);\n\n  function createFA5iconSubset(type, weight = '400', family = familyName) {\n    const fontFileID = proVersion ? `Pro_${type}` : type;\n\n    return createIconSet(glyphMap, family, `FontAwesome5_${fontFileID}.ttf`, {\n      fontWeight: Platform.OS === 'ios' ? weight : undefined,\n    });\n  }\n\n  const RegularSet = createFA5iconSubset('Regular');\n  const SolidSet = createFA5iconSubset('Solid', '700');\n  const LightSet = proVersion\n    ? createFA5iconSubset('Light', '100')\n    : RegularSet;\n  const BrandsSet = createFA5iconSubset(\n    'Brands',\n    '400',\n    'Font Awesome 5 Brands'\n  );\n\n  function iconSetFromStyle(style) {\n    switch (style) {\n      case FA5Style.brand:\n        return BrandsSet;\n      case FA5Style.light:\n        return LightSet;\n      case FA5Style.solid:\n        return SolidSet;\n      default:\n        return RegularSet;\n    }\n  }\n\n  function iconSetFromFamily(family) {\n    switch (family) {\n      case 'brands':\n        return BrandsSet;\n      case 'regular':\n        return LightSet;\n      case 'solid':\n        return SolidSet;\n      default:\n        return RegularSet;\n    }\n  }\n\n  function styleFromProps(props) {\n    const { light, solid } = props;\n\n    if (light) return FA5Style.light;\n    if (solid) return FA5Style.solid;\n    return FA5Style.regular;\n  }\n\n  function styleToFamily(style) {\n    switch (style) {\n      case FA5Style.brand:\n        return 'brands';\n      case FA5Style.light:\n        return 'light';\n      case FA5Style.solid:\n        return 'solid';\n      default:\n        return 'regular';\n    }\n  }\n\n  function familyToStyle(family) {\n    switch (family) {\n      case 'brands':\n        return FA5Style.brand;\n      case 'light':\n        return FA5Style.light;\n      case 'solid':\n        return FA5Style.solid;\n      default:\n        return FA5Style.regular;\n    }\n  }\n\n  function fallbackForGlyph(glyph) {\n    for (let i = 0; i < metadataKeys.length; i += 1) {\n      const family = metadataKeys[i];\n      if (metadata[family].indexOf(glyph) !== -1) return family;\n    }\n\n    return 'regular';\n  }\n\n  function hasIconForStyle(glyph, style) {\n    const family = styleToFamily(style);\n\n    if (metadataKeys.indexOf(family) === -1) return false;\n\n    return metadata[family].indexOf(glyph) !== -1;\n  }\n\n  function getIconSetForProps(props) {\n    const { name } = props;\n    const style = styleFromProps(props);\n\n    if (hasIconForStyle(name, style)) return iconSetFromStyle(style);\n\n    const fallbackFamily = fallbackForGlyph(name);\n    return iconSetFromFamily(fallbackFamily);\n  }\n\n  function createFA5iconClass(baseClass, selectClass = iconSet => iconSet) {\n    class FA5iconClass extends PureComponent {\n      static propTypes = {\n        light: PropTypes.bool,\n        solid: PropTypes.bool,\n      };\n\n      static defaultProps = {\n        light: false,\n        solid: false,\n      };\n\n      render() {\n        const selectedIconSet = getIconSetForProps(this.props);\n        const SelectedIconClass = selectClass(selectedIconSet);\n        const { light, solid, ...restProps } = this.props;\n\n        return <SelectedIconClass {...restProps} />;\n      }\n    }\n\n    return FA5iconClass;\n  }\n\n  const Base = RegularSet;\n  const FA5icon = createFA5iconClass(Base);\n\n  FA5icon.Button = createFA5iconClass(Base.Button, iconSet => iconSet.Button);\n  FA5icon.TabBarItem = createFA5iconClass(\n    Base.TabBarItem,\n    iconSet => iconSet.TabBarItem\n  );\n  FA5icon.TabBarItemIOS = createFA5iconClass(\n    Base.TabBarItemIOS,\n    iconSet => iconSet.TabBarItemIOS\n  );\n  FA5icon.ToolbarAndroid = createFA5iconClass(\n    Base.ToolbarAndroid,\n    iconSet => iconSet.ToolbarAndroid\n  );\n\n  const imageSourceCache = {};\n\n  function getImageSource(\n    name,\n    size = DEFAULT_ICON_SIZE,\n    color = DEFAULT_ICON_COLOR,\n    type = FA5Style.regular\n  ) {\n    ensureNativeModuleAvailable();\n\n    let style = type;\n    if (!hasIconForStyle(name, style)) {\n      const fallbackFamily = fallbackForGlyph(name);\n      style = familyToStyle(fallbackFamily);\n    }\n\n    if (Platform.OS === 'ios' && style !== FA5Style.brand) {\n      let glyph = glyphMap[name] || '?';\n      if (typeof glyph === 'number') {\n        glyph = String.fromCharCode(glyph);\n      }\n\n      const processedColor = processColor(color);\n      const cacheKey = `${glyph}:${size}:${processedColor}:${type}`;\n      const scale = PixelRatio.get();\n\n      return new Promise((resolve, reject) => {\n        const cached = imageSourceCache[cacheKey];\n        if (typeof cached !== 'undefined') {\n          if (!cached || cached instanceof Error) {\n            reject(cached);\n          } else {\n            resolve({ uri: cached, scale });\n          }\n        } else {\n          NativeIconAPI.getImageForFontAwesome5(\n            familyName,\n            glyph,\n            size,\n            style,\n            processedColor,\n            (err, image) => {\n              const error = typeof err === 'string' ? new Error(err) : err;\n              imageSourceCache[cacheKey] = image || error || false;\n              if (!error && image) {\n                resolve({ uri: image, scale });\n              } else {\n                reject(error);\n              }\n            }\n          );\n        }\n      });\n    }\n\n    const iconSet = iconSetFromStyle(style);\n    return iconSet.getImageSource(name, size, color);\n  }\n\n  FA5icon.getImageSource = getImageSource;\n\n  return FA5icon;\n}\n"]},"metadata":{},"sourceType":"module"}