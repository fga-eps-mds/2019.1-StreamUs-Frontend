{"ast":null,"code":"Object.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.List = undefined;\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _jsxFileName = \"src/basic/List.js\";\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require(\"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactNative = require(\"react-native\");\n\nvar _nativeBaseShoutemTheme = require(\"native-base-shoutem-theme\");\n\nvar _SwipeRow = require(\"./SwipeRow\");\n\nvar _mapPropsToStyleNames = require(\"../utils/mapPropsToStyleNames\");\n\nvar _mapPropsToStyleNames2 = _interopRequireDefault(_mapPropsToStyleNames);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar List = function (_Component) {\n  _inherits(List, _Component);\n\n  function List(props) {\n    _classCallCheck(this, List);\n\n    var _this = _possibleConstructorReturn(this, (List.__proto__ || Object.getPrototypeOf(List)).call(this, props));\n\n    _this._rows = {};\n    _this.openCellId = null;\n\n    if (props.dataArray && props.renderRow) {\n      var rowHasChanged = props.rowHasChanged || function (r1, r2) {\n        return r1 !== r2;\n      };\n\n      var ds = new _reactNative.ListView.DataSource({\n        rowHasChanged: rowHasChanged\n      });\n      _this.state = {\n        dataSource: ds.cloneWithRows(props.dataArray)\n      };\n    } else {\n      _this.state = {};\n    }\n\n    return _this;\n  }\n\n  _createClass(List, [{\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      if (this.state.dataSource) {\n        this.setState({\n          dataSource: this.state.dataSource.cloneWithRows(nextProps.dataArray)\n        });\n      }\n    }\n  }, {\n    key: \"renderChildren\",\n    value: function renderChildren() {\n      var childrenArray = _react2.default.Children.map(this.props.children, function (child) {\n        return child;\n      });\n\n      return childrenArray;\n    }\n  }, {\n    key: \"setScrollEnabled\",\n    value: function setScrollEnabled(enable) {\n      this._listView.setNativeProps({\n        scrollEnabled: enable\n      });\n    }\n  }, {\n    key: \"safeCloseOpenRow\",\n    value: function safeCloseOpenRow() {\n      if (this._rows[this.openCellId]._root) {\n        this._rows[this.openCellId]._root.closeRow();\n      }\n    }\n  }, {\n    key: \"rowSwipeGestureBegan\",\n    value: function rowSwipeGestureBegan(id) {\n      if (this.props.closeOnRowBeginSwipe && this.openCellId && this.openCellId !== id) {\n        this.safeCloseOpenRow();\n      }\n    }\n  }, {\n    key: \"onRowOpen\",\n    value: function onRowOpen(secId, rowId, rowMap) {\n      var cellIdentifier = \"\" + secId + rowId;\n\n      if (this.openCellId && this.openCellId !== cellIdentifier) {\n        this.safeCloseOpenRow();\n      }\n\n      this.openCellId = cellIdentifier;\n      this.props.onRowOpen && this.props.onRowOpen(secId, rowId, rowMap);\n    }\n  }, {\n    key: \"onRowPress\",\n    value: function onRowPress(id) {\n      if (this.openCellId) {\n        if (this.props.closeOnRowPress) {\n          this.safeCloseOpenRow();\n          this.openCellId = null;\n        }\n      }\n    }\n  }, {\n    key: \"closeRow\",\n    value: function closeRow(id) {\n      if (this.openCellId) {\n        if (this.props.closeOnRowPress) {\n          this.safeCloseOpenRow();\n          this.openCellId = null;\n        }\n      }\n    }\n  }, {\n    key: \"openLeftRow\",\n    value: function openLeftRow(id) {\n      this._rows[id]._root.openLeftRow();\n    }\n  }, {\n    key: \"openRightRow\",\n    value: function openRightRow(id) {\n      this._rows[id]._root.openRightRow();\n    }\n  }, {\n    key: \"onScroll\",\n    value: function onScroll(e) {\n      if (this.openCellId) {\n        if (this.props.closeOnScroll) {\n          this.safeCloseOpenRow();\n          this.openCellId = null;\n        }\n      }\n\n      this.props.onScroll && this.props.onScroll(e);\n    }\n  }, {\n    key: \"setRefs\",\n    value: function setRefs(ref) {\n      this._listView = ref;\n      this.props.listViewRef && this.props.listViewRef(ref);\n    }\n  }, {\n    key: \"renderRow\",\n    value: function renderRow(rowData, secId, rowId, rowMap) {\n      var _this2 = this;\n\n      var previewRowId = this.props.dataSource && this.props.dataSource.getRowIDForFlatIndex(this.props.previewRowIndex || 0);\n      return _react2.default.createElement(_SwipeRow.SwipeRow, {\n        list: true,\n        ref: function ref(row) {\n          return _this2._rows[\"\" + secId + rowId] = row;\n        },\n        swipeGestureBegan: function swipeGestureBegan(_) {\n          return _this2.rowSwipeGestureBegan(\"\" + secId + rowId);\n        },\n        onRowOpen: function onRowOpen(_) {\n          return _this2.onRowOpen(secId, rowId, _this2._rows);\n        },\n        onRowDidOpen: function onRowDidOpen(_) {\n          return _this2.props.onRowDidOpen && _this2.props.onRowDidOpen(secId, rowId, _this2._rows);\n        },\n        onRowClose: function onRowClose(_) {\n          return _this2.props.onRowClose && _this2.props.onRowClose(secId, rowId, _this2._rows);\n        },\n        onRowDidClose: function onRowDidClose(_) {\n          return _this2.props.onRowDidClose && _this2.props.onRowDidClose(secId, rowId, _this2._rows);\n        },\n        onRowPress: function onRowPress(_) {\n          return _this2.onRowPress(\"\" + secId + rowId);\n        },\n        openLeftRow: function openLeftRow(_) {\n          return _this2.openLeftRow(\"\" + secId + rowId);\n        },\n        openRightRow: function openRightRow(_) {\n          return _this2.openRightRow(\"\" + secId + rowId);\n        },\n        closeRow: function closeRow(_) {\n          return _this2.closeRow(\"\" + secId + rowId);\n        },\n        setScrollEnabled: function setScrollEnabled(enable) {\n          return _this2.setScrollEnabled(enable);\n        },\n        leftOpenValue: this.props.leftOpenValue,\n        rightOpenValue: this.props.rightOpenValue,\n        closeOnRowPress: this.props.closeOnRowPress,\n        disableLeftSwipe: this.props.disableLeftSwipe,\n        disableRightSwipe: this.props.disableRightSwipe,\n        stopLeftSwipe: this.props.stopLeftSwipe,\n        stopRightSwipe: this.props.stopRightSwipe,\n        recalculateHiddenLayout: this.props.recalculateHiddenLayout,\n        style: this.props.swipeRowStyle,\n        preview: (this.props.previewFirstRow || this.props.previewRowIndex) && rowId === previewRowId,\n        previewDuration: this.props.previewDuration,\n        previewOpenValue: this.props.previewOpenValue,\n        tension: this.props.tension,\n        friction: this.props.friction,\n        directionalDistanceChangeThreshold: this.props.directionalDistanceChangeThreshold,\n        swipeToOpenPercent: this.props.swipeToOpenPercent,\n        left: this.props.renderLeftHiddenRow && this.props.renderLeftHiddenRow(rowData, secId, rowId, this._rows),\n        right: this.props.renderRightHiddenRow && this.props.renderRightHiddenRow(rowData, secId, rowId, this._rows),\n        body: this.props.renderRow && this.props.renderRow(rowData, secId, rowId, this._rows),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      if (this.props.renderLeftHiddenRow || this.props.renderRightHiddenRow) {\n        return _react2.default.createElement(_reactNative.ListView, _extends({}, this.props, {\n          ref: function ref(_ref) {\n            _this3.setRefs(_ref);\n\n            _this3._root = _ref;\n          },\n          enableEmptySections: true,\n          onScroll: function onScroll(e) {\n            return _this3.onScroll(e);\n          },\n          renderRow: function renderRow(rowData, secId, rowId) {\n            return _this3.renderRow(rowData, secId, rowId, _this3._rows);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 190\n          }\n        }));\n      } else if (this.state.dataSource) {\n        return _react2.default.createElement(_reactNative.ListView, _extends({}, this.props, {\n          ref: function ref(_ref2) {\n            return _this3._root = _ref2;\n          },\n          enableEmptySections: true,\n          dataSource: this.state.dataSource,\n          renderRow: this.props.renderRow,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 205\n          }\n        }));\n      }\n\n      return _react2.default.createElement(_reactNative.View, _extends({\n        ref: function ref(c) {\n          return _this3._root = c;\n        }\n      }, this.props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215\n        }\n      }), this.renderChildren());\n    }\n  }]);\n\n  return List;\n}(_react.Component);\n\nList.defaultProps = {\n  leftOpenValue: 0,\n  rightOpenValue: 0,\n  closeOnRowBeginSwipe: false,\n  closeOnScroll: true,\n  closeOnRowPress: true,\n  disableLeftSwipe: false,\n  disableRightSwipe: false,\n  recalculateHiddenLayout: false,\n  previewFirstRow: false,\n  directionalDistanceChangeThreshold: 2,\n  swipeToOpenPercent: 50\n};\nvar StyledList = (0, _nativeBaseShoutemTheme.connectStyle)(\"NativeBase.List\", {}, _mapPropsToStyleNames2.default)(List);\nexports.List = StyledList;","map":null,"metadata":{},"sourceType":"script"}