{"ast":null,"code":"Object.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.DeckSwiper = undefined;\nvar _jsxFileName = \"src/basic/DeckSwiper.js\";\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require(\"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require(\"prop-types\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _reactNative = require(\"react-native\");\n\nvar _clamp = require(\"clamp\");\n\nvar _clamp2 = _interopRequireDefault(_clamp);\n\nvar _nativeBaseShoutemTheme = require(\"native-base-shoutem-theme\");\n\nvar _mapPropsToStyleNames = require(\"../utils/mapPropsToStyleNames\");\n\nvar _mapPropsToStyleNames2 = _interopRequireDefault(_mapPropsToStyleNames);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar SWIPE_THRESHOLD = 120;\n\nvar DeckSwiper = function (_Component) {\n  _inherits(DeckSwiper, _Component);\n\n  function DeckSwiper(props) {\n    _classCallCheck(this, DeckSwiper);\n\n    var _this = _possibleConstructorReturn(this, (DeckSwiper.__proto__ || Object.getPrototypeOf(DeckSwiper)).call(this, props));\n\n    _this.state = {\n      pan: new _reactNative.Animated.ValueXY(),\n      pan2: new _reactNative.Animated.ValueXY(),\n      enter: new _reactNative.Animated.Value(0.8),\n      selectedItem: _this.props.dataSource[0],\n      selectedItem2: _this.props.dataSource[1],\n      card1Top: true,\n      card2Top: false,\n      fadeAnim: new _reactNative.Animated.Value(0.8),\n      looping: typeof _this.props.looping === \"undefined\" ? true : _this.props.looping,\n      disabled: _this.props.dataSource.length === 0,\n      lastCard: _this.props.dataSource.length === 1\n    };\n    return _this;\n  }\n\n  _createClass(DeckSwiper, [{\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(_ref) {\n      var dataSource = _ref.dataSource;\n\n      if (dataSource.length !== this.props.dataSource.length) {\n        if (dataSource.length <= 1) {\n          this.setState(_extends({}, this.state, {\n            selectedItem: dataSource[0],\n            selectedItem2: undefined,\n            disabled: dataSource.length === 0,\n            lastCard: dataSource.length === 1\n          }));\n          return;\n        }\n\n        var visibleIndex = dataSource.indexOf(this.state.selectedItem);\n        var currentIndex = visibleIndex < 0 ? visibleIndex + 1 : visibleIndex;\n        var nextIndex = currentIndex + 1 === dataSource.length ? 0 : currentIndex + 1;\n        this.setState({\n          selectedItem: dataSource[currentIndex],\n          selectedItem2: dataSource[nextIndex]\n        });\n      }\n    }\n  }, {\n    key: \"getInitialStyle\",\n    value: function getInitialStyle() {\n      return {\n        topCard: {\n          position: \"absolute\",\n          top: 0,\n          right: 0,\n          left: 0\n        }\n      };\n    }\n  }, {\n    key: \"findNextIndexes\",\n    value: function findNextIndexes(currentIndex) {\n      var newIdx = currentIndex + 1;\n      var newIdx2 = currentIndex + 2;\n\n      if (newIdx2 > this.props.dataSource.length - 1 && newIdx === this.props.dataSource.length - 1) {\n        return [newIdx, 0];\n      } else if (newIdx > this.props.dataSource.length - 1) {\n        return [0, 1];\n      }\n\n      return [newIdx, newIdx2];\n    }\n  }, {\n    key: \"selectNext\",\n    value: function selectNext() {\n      var _this2 = this;\n\n      var dataSource = this.props.dataSource;\n      var currentIndex = dataSource.indexOf(this.state.selectedItem);\n\n      if (!this.state.looping) {\n        if (currentIndex === dataSource.length - 1) {\n          return this.setState({\n            disabled: true\n          });\n        } else if (currentIndex === dataSource.length - 2) {\n          return setTimeout(function () {\n            _this2.setState({\n              selectedItem: dataSource[currentIndex + 1]\n            });\n\n            setTimeout(function () {\n              _this2.setState({\n                lastCard: true\n              });\n            }, 350);\n          }, 50);\n        }\n      }\n\n      var nextIndexes = this.findNextIndexes(currentIndex);\n      setTimeout(function () {\n        _this2.setState({\n          selectedItem: _this2.props.dataSource[nextIndexes[0]]\n        });\n\n        setTimeout(function () {\n          _this2.setState({\n            selectedItem2: _this2.props.dataSource[nextIndexes[1]]\n          });\n        }, 350);\n      }, 50);\n    }\n  }, {\n    key: \"swipeRight\",\n    value: function swipeRight() {\n      var _this3 = this;\n\n      if (this.props.onSwiping) this.props.onSwiping(\"right\");\n      setTimeout(function () {\n        _reactNative.Animated.timing(_this3.state.fadeAnim, {\n          toValue: 1\n        }).start();\n\n        _reactNative.Animated.spring(_this3.state.enter, {\n          toValue: 1,\n          friction: 7\n        }).start();\n\n        _this3.selectNext();\n\n        _reactNative.Animated.decay(_this3.state.pan, {\n          velocity: {\n            x: 8,\n            y: 1\n          },\n          deceleration: 0.98\n        }).start(_this3._resetState.bind(_this3));\n      }, 300);\n    }\n  }, {\n    key: \"swipeLeft\",\n    value: function swipeLeft() {\n      var _this4 = this;\n\n      if (this.props.onSwiping) this.props.onSwiping(\"left\");\n      setTimeout(function () {\n        _reactNative.Animated.timing(_this4.state.fadeAnim, {\n          toValue: 1\n        }).start();\n\n        _reactNative.Animated.spring(_this4.state.enter, {\n          toValue: 1,\n          friction: 7\n        }).start();\n\n        _this4.selectNext();\n\n        _reactNative.Animated.decay(_this4.state.pan, {\n          velocity: {\n            x: -8,\n            y: 1\n          },\n          deceleration: 0.98\n        }).start(_this4._resetState.bind(_this4));\n      }, 300);\n    }\n  }, {\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var _this5 = this;\n\n      this._panResponder = _reactNative.PanResponder.create({\n        onMoveShouldSetResponderCapture: function onMoveShouldSetResponderCapture() {\n          return true;\n        },\n        onMoveShouldSetPanResponderCapture: function onMoveShouldSetPanResponderCapture(evt, gestureState) {\n          return Math.abs(gestureState.dx) > 5;\n        },\n        onPanResponderGrant: function onPanResponderGrant(e, gestureState) {\n          _this5.state.pan.setOffset({\n            x: _this5.state.pan.x._value,\n            y: _this5.state.pan.y._value\n          });\n\n          _this5.state.pan.setValue({\n            x: 0,\n            y: 0\n          });\n        },\n        onPanResponderMove: function onPanResponderMove(e, gestureState) {\n          if (gestureState.dx > 20) {\n            if (_this5.props.onSwiping) _this5.props.onSwiping(\"right\", gestureState.dx);\n          } else if (gestureState.dx < -20) {\n            if (_this5.props.onSwiping) _this5.props.onSwiping(\"left\", gestureState.dx);\n          }\n\n          var val = Math.abs(gestureState.dx * 0.0013);\n          var opa = Math.abs(gestureState.dx * 0.0022);\n\n          if (val > 0.2) {\n            val = 0.2;\n          }\n\n          _reactNative.Animated.timing(_this5.state.fadeAnim, {\n            toValue: 0.8 + val\n          }).start();\n\n          _reactNative.Animated.spring(_this5.state.enter, {\n            toValue: 0.8 + val,\n            friction: 7\n          }).start();\n\n          _reactNative.Animated.event([null, {\n            dx: _this5.state.pan.x\n          }])(e, gestureState);\n        },\n        onPanResponderRelease: function onPanResponderRelease(e, _ref2) {\n          var vx = _ref2.vx,\n              vy = _ref2.vy;\n          if (_this5.props.onSwiping) _this5.props.onSwiping(null);\n          var velocity = void 0;\n\n          if (vx >= 0) {\n            velocity = (0, _clamp2.default)(vx, 4.5, 10);\n          } else if (vx < 0) {\n            velocity = (0, _clamp2.default)(vx * -1, 4.5, 10) * -1;\n          }\n\n          if (Math.abs(_this5.state.pan.x._value) > SWIPE_THRESHOLD) {\n            if (velocity > 0) {\n              _this5.props.onSwipeRight ? _this5.props.onSwipeRight(_this5.state.selectedItem) : undefined;\n\n              _this5.selectNext();\n            } else {\n              _this5.props.onSwipeLeft ? _this5.props.onSwipeLeft(_this5.state.selectedItem) : undefined;\n\n              _this5.selectNext();\n            }\n\n            _reactNative.Animated.decay(_this5.state.pan, {\n              velocity: {\n                x: velocity,\n                y: vy\n              },\n              deceleration: 0.98\n            }).start(_this5._resetState.bind(_this5));\n          } else {\n            _reactNative.Animated.spring(_this5.state.pan, {\n              toValue: {\n                x: 0,\n                y: 0\n              },\n              friction: 4\n            }).start();\n          }\n        }\n      });\n    }\n  }, {\n    key: \"_resetState\",\n    value: function _resetState() {\n      this.state.pan.setValue({\n        x: 0,\n        y: 0\n      });\n      this.state.enter.setValue(0.8);\n      this.state.fadeAnim.setValue(0.8);\n      this.setState({\n        card1Top: !this.state.card1Top,\n        card2Top: !this.state.card2Top\n      });\n      if (this.props.onSwiping) this.props.onSwiping(null);\n    }\n  }, {\n    key: \"getCardStyles\",\n    value: function getCardStyles() {\n      var _state = this.state,\n          pan = _state.pan,\n          pan2 = _state.pan2,\n          enter = _state.enter;\n      var _ref3 = [pan.x, pan.y],\n          translateX = _ref3[0],\n          translateY = _ref3[1];\n      var rotate = pan.x.interpolate({\n        inputRange: [-700, 0, 700],\n        outputRange: [\"-10deg\", \"0deg\", \"10deg\"]\n      });\n      var opacity = pan.x.interpolate({\n        inputRange: [-320, 0, 320],\n        outputRange: [0.9, 1, 0.9]\n      });\n      var scale = enter;\n      var animatedCardStyles = {\n        transform: [{\n          translateX: translateX\n        }, {\n          translateY: translateY\n        }, {\n          rotate: rotate\n        }],\n        opacity: opacity\n      };\n      var animatedCardStyles2 = {\n        transform: [{\n          scale: scale\n        }]\n      };\n      return [animatedCardStyles, animatedCardStyles2];\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (this.state.disabled) {\n        return _react2.default.createElement(_reactNative.View, {\n          style: {\n            position: \"relative\",\n            flexDirection: \"column\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 258\n          }\n        }, _react2.default.createElement(_reactNative.View, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 259\n          }\n        }, this.props.renderEmpty && this.props.renderEmpty()));\n      } else if (this.state.lastCard) {\n        return _react2.default.createElement(_reactNative.View, {\n          style: {\n            position: \"relative\",\n            flexDirection: \"column\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 265\n          }\n        }, this.state.selectedItem === undefined ? _react2.default.createElement(_reactNative.View, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 267\n          }\n        }) : _react2.default.createElement(_reactNative.View, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 269\n          }\n        }, _react2.default.createElement(_reactNative.Animated.View, _extends({\n          style: [this.getCardStyles()[1], this.getInitialStyle().topCard, {\n            opacity: this.state.fadeAnim\n          }]\n        }, this._panResponder.panHandlers, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 270\n          }\n        }), this.props.renderEmpty && this.props.renderEmpty()), _react2.default.createElement(_reactNative.Animated.View, _extends({\n          style: [this.getCardStyles()[0], this.getInitialStyle().topCard]\n        }, this._panResponder.panHandlers, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 280\n          }\n        }), this.props.renderItem(this.state.selectedItem))));\n      }\n\n      return _react2.default.createElement(_reactNative.View, {\n        style: {\n          position: \"relative\",\n          flexDirection: \"column\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 295\n        }\n      }, this.state.selectedItem === undefined ? _react2.default.createElement(_reactNative.View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 297\n        }\n      }) : _react2.default.createElement(_reactNative.View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 299\n        }\n      }, _react2.default.createElement(_reactNative.Animated.View, _extends({\n        style: [this.getCardStyles()[1], this.getInitialStyle().topCard, {\n          opacity: this.state.fadeAnim\n        }]\n      }, this._panResponder.panHandlers, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 300\n        }\n      }), this.props.renderBottom ? this.props.renderBottom(this.state.selectedItem2) : this.props.renderItem(this.state.selectedItem2)), _react2.default.createElement(_reactNative.Animated.View, _extends({\n        style: [this.getCardStyles()[0], this.getInitialStyle().topCard]\n      }, this._panResponder.panHandlers, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 312\n        }\n      }), this.props.renderTop ? this.props.renderTop(this.state.selectedItem) : this.props.renderItem(this.state.selectedItem))));\n    }\n  }]);\n\n  return DeckSwiper;\n}(_react.Component);\n\nDeckSwiper.propTypes = _extends({}, _reactNative.ViewPropTypes, {\n  style: _propTypes2.default.oneOfType([_propTypes2.default.object, _propTypes2.default.number, _propTypes2.default.array]),\n  dataSource: _propTypes2.default.array\n});\nvar StyledDeckSwiper = (0, _nativeBaseShoutemTheme.connectStyle)(\"NativeBase.DeckSwiper\", {}, _mapPropsToStyleNames2.default)(DeckSwiper);\nexports.DeckSwiper = StyledDeckSwiper;","map":null,"metadata":{},"sourceType":"script"}