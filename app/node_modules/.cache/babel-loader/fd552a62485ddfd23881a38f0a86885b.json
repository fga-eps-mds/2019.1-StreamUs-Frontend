{"ast":null,"code":"import _regeneratorRuntime from \"/usr/app/streamUs/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/usr/app/streamUs/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/usr/app/streamUs/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/usr/app/streamUs/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/usr/app/streamUs/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/usr/app/streamUs/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"/usr/app/streamUs/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/usr/app/streamUs/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _defineProperty from \"/usr/app/streamUs/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/usr/app/streamUs/node_modules/react-native-vector-icons/lib/tab-bar-item-ios.js\";\n\n/* eslint-disable react/no-unused-prop-types */\nimport isEqual from 'lodash/isEqual';\nimport pick from 'lodash/pick';\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { TabBarIOS } from './react-native';\nvar ICON_PROP_NAMES = ['iconName', 'iconSize', 'iconColor'];\nvar SELECTED_ICON_PROP_NAMES = [].concat(ICON_PROP_NAMES, ['selectedIconName', 'selectedIconColor']);\n\nvar arePropsEqual = function arePropsEqual(keys) {\n  return function (prevProps, nextProps) {\n    return isEqual(pick(prevProps, keys), pick(nextProps, keys));\n  };\n};\n\nvar areIconPropsEqual = arePropsEqual(ICON_PROP_NAMES);\nvar areSelectedIconPropsEqual = arePropsEqual(SELECTED_ICON_PROP_NAMES);\nexport default function createTabBarItemIOSComponent(IconNamePropType, getImageSource) {\n  var _class, _temp;\n\n  return _temp = _class =\n  /*#__PURE__*/\n  function (_PureComponent) {\n    _inherits(TabBarItemIOS, _PureComponent);\n\n    function TabBarItemIOS() {\n      var _getPrototypeOf2;\n\n      var _this;\n\n      _classCallCheck(this, TabBarItemIOS);\n\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(TabBarItemIOS)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n      _defineProperty(_assertThisInitialized(_this), \"state\", {\n        icon: undefined,\n        selectedIcon: undefined\n      });\n\n      return _this;\n    }\n\n    _createClass(TabBarItemIOS, [{\n      key: \"componentDidMount\",\n      value: function componentDidMount() {\n        this.updateIconSource();\n        this.updateSelectedIconSource();\n      }\n    }, {\n      key: \"componentDidUpdate\",\n      value: function componentDidUpdate(prevProps) {\n        if (!areIconPropsEqual(prevProps, this.props)) {\n          this.updateIconSource();\n        }\n\n        if (!areSelectedIconPropsEqual(prevProps, this.props)) {\n          this.updateSelectedIconSource();\n        }\n      }\n    }, {\n      key: \"updateIconSource\",\n      value: function () {\n        var _updateIconSource = _asyncToGenerator(\n        /*#__PURE__*/\n        _regeneratorRuntime.mark(function _callee() {\n          var _this$props, iconName, iconSize, iconColor, icon;\n\n          return _regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  _this$props = this.props, iconName = _this$props.iconName, iconSize = _this$props.iconSize, iconColor = _this$props.iconColor;\n\n                  if (!iconName) {\n                    _context.next = 8;\n                    break;\n                  }\n\n                  _context.next = 4;\n                  return getImageSource(iconName, iconSize, iconColor);\n\n                case 4:\n                  icon = _context.sent;\n                  this.setState({\n                    icon: icon\n                  }); // eslint-disable-next-line react/destructuring-assignment\n\n                  _context.next = 9;\n                  break;\n\n                case 8:\n                  if (this.state.icon) {\n                    this.setState({\n                      icon: undefined\n                    });\n                  }\n\n                case 9:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee, this);\n        }));\n\n        function updateIconSource() {\n          return _updateIconSource.apply(this, arguments);\n        }\n\n        return updateIconSource;\n      }()\n    }, {\n      key: \"updateSelectedIconSource\",\n      value: function () {\n        var _updateSelectedIconSource = _asyncToGenerator(\n        /*#__PURE__*/\n        _regeneratorRuntime.mark(function _callee2() {\n          var _this$props2, iconName, iconColor, iconSize, selectedIconName, selectedIconColor, selectedIcon;\n\n          return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n            while (1) {\n              switch (_context2.prev = _context2.next) {\n                case 0:\n                  _this$props2 = this.props, iconName = _this$props2.iconName, iconColor = _this$props2.iconColor, iconSize = _this$props2.iconSize, selectedIconName = _this$props2.selectedIconName, selectedIconColor = _this$props2.selectedIconColor;\n\n                  if (!(selectedIconName || selectedIconColor)) {\n                    _context2.next = 8;\n                    break;\n                  }\n\n                  _context2.next = 4;\n                  return getImageSource(selectedIconName || iconName, iconSize, selectedIconColor || iconColor);\n\n                case 4:\n                  selectedIcon = _context2.sent;\n                  this.setState({\n                    selectedIcon: selectedIcon\n                  }); // eslint-disable-next-line react/destructuring-assignment\n\n                  _context2.next = 9;\n                  break;\n\n                case 8:\n                  if (this.state.selectedIcon) {\n                    this.setState({\n                      selectedIcon: undefined\n                    });\n                  }\n\n                case 9:\n                case \"end\":\n                  return _context2.stop();\n              }\n            }\n          }, _callee2, this);\n        }));\n\n        function updateSelectedIconSource() {\n          return _updateSelectedIconSource.apply(this, arguments);\n        }\n\n        return updateSelectedIconSource;\n      }()\n    }, {\n      key: \"render\",\n      value: function render() {\n        return React.createElement(TabBarIOS.Item, Object.assign({}, this.state, this.props, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93\n          },\n          __self: this\n        }));\n      }\n    }]);\n\n    return TabBarItemIOS;\n  }(PureComponent), _defineProperty(_class, \"propTypes\", {\n    iconName: IconNamePropType.isRequired,\n    selectedIconName: IconNamePropType,\n    iconSize: PropTypes.number,\n    iconColor: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    selectedIconColor: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n  }), _defineProperty(_class, \"defaultProps\", {\n    iconSize: 30\n  }), _temp;\n}","map":{"version":3,"sources":["/usr/app/streamUs/node_modules/react-native-vector-icons/lib/tab-bar-item-ios.js"],"names":["isEqual","pick","React","PureComponent","PropTypes","TabBarIOS","ICON_PROP_NAMES","SELECTED_ICON_PROP_NAMES","arePropsEqual","keys","prevProps","nextProps","areIconPropsEqual","areSelectedIconPropsEqual","createTabBarItemIOSComponent","IconNamePropType","getImageSource","icon","undefined","selectedIcon","updateIconSource","updateSelectedIconSource","props","iconName","iconSize","iconColor","setState","state","selectedIconName","selectedIconColor","isRequired","number","oneOfType","string"],"mappings":"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","sourcesContent":["/* eslint-disable react/no-unused-prop-types */\nimport isEqual from 'lodash/isEqual';\nimport pick from 'lodash/pick';\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { TabBarIOS } from './react-native';\n\nconst ICON_PROP_NAMES = ['iconName', 'iconSize', 'iconColor'];\nconst SELECTED_ICON_PROP_NAMES = [\n  ...ICON_PROP_NAMES,\n  'selectedIconName',\n  'selectedIconColor',\n];\n\nconst arePropsEqual = keys => (prevProps, nextProps) =>\n  isEqual(pick(prevProps, keys), pick(nextProps, keys));\n\nconst areIconPropsEqual = arePropsEqual(ICON_PROP_NAMES);\nconst areSelectedIconPropsEqual = arePropsEqual(SELECTED_ICON_PROP_NAMES);\n\nexport default function createTabBarItemIOSComponent(\n  IconNamePropType,\n  getImageSource\n) {\n  return class TabBarItemIOS extends PureComponent {\n    static propTypes = {\n      iconName: IconNamePropType.isRequired,\n      selectedIconName: IconNamePropType,\n      iconSize: PropTypes.number,\n      iconColor: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n      selectedIconColor: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.number,\n      ]),\n    };\n\n    static defaultProps = {\n      iconSize: 30,\n    };\n\n    state = {\n      icon: undefined,\n      selectedIcon: undefined,\n    };\n\n    componentDidMount() {\n      this.updateIconSource();\n      this.updateSelectedIconSource();\n    }\n\n    componentDidUpdate(prevProps) {\n      if (!areIconPropsEqual(prevProps, this.props)) {\n        this.updateIconSource();\n      }\n      if (!areSelectedIconPropsEqual(prevProps, this.props)) {\n        this.updateSelectedIconSource();\n      }\n    }\n\n    async updateIconSource() {\n      const { iconName, iconSize, iconColor } = this.props;\n      if (iconName) {\n        const icon = await getImageSource(iconName, iconSize, iconColor);\n        this.setState({ icon });\n        // eslint-disable-next-line react/destructuring-assignment\n      } else if (this.state.icon) {\n        this.setState({ icon: undefined });\n      }\n    }\n\n    async updateSelectedIconSource() {\n      const {\n        iconName,\n        iconColor,\n        iconSize,\n        selectedIconName,\n        selectedIconColor,\n      } = this.props;\n      if (selectedIconName || selectedIconColor) {\n        const selectedIcon = await getImageSource(\n          selectedIconName || iconName,\n          iconSize,\n          selectedIconColor || iconColor\n        );\n        this.setState({ selectedIcon });\n        // eslint-disable-next-line react/destructuring-assignment\n      } else if (this.state.selectedIcon) {\n        this.setState({ selectedIcon: undefined });\n      }\n    }\n\n    render() {\n      return <TabBarIOS.Item {...this.state} {...this.props} />;\n    }\n  };\n}\n"]},"metadata":{},"sourceType":"module"}