{"ast":null,"code":"/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @providesModule NativeEventEmitter\n * \n */\n'use strict';\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\n\nimport EventEmitter from '../emitter/EventEmitter';\nimport Platform from '../../../exports/Platform';\nimport invariant from 'fbjs/lib/invariant';\n/**\n * Abstract base class for implementing event-emitting modules. This implements\n * a subset of the standard EventEmitter node module API.\n */\n\nvar NativeEventEmitter =\n/*#__PURE__*/\nfunction (_EventEmitter) {\n  _inheritsLoose(NativeEventEmitter, _EventEmitter);\n\n  function NativeEventEmitter(nativeModule) {\n    var _this;\n\n    _this = _EventEmitter.call(this) || this;\n\n    if (Platform.OS === 'ios') {\n      invariant(nativeModule, 'Native module cannot be null.');\n      _this._nativeModule = nativeModule;\n    }\n\n    return _this;\n  }\n\n  var _proto = NativeEventEmitter.prototype;\n\n  _proto.addListener = function addListener(eventType, listener, context) {\n    if (this._nativeModule != null) {\n      this._nativeModule.addListener(eventType);\n    }\n\n    return _EventEmitter.prototype.addListener.call(this, eventType, listener, context);\n  };\n\n  _proto.removeAllListeners = function removeAllListeners(eventType) {\n    invariant(eventType, 'eventType argument is required.');\n    var count = this.listeners(eventType).length;\n\n    if (this._nativeModule != null) {\n      this._nativeModule.removeListeners(count);\n    }\n\n    _EventEmitter.prototype.removeAllListeners.call(this, eventType);\n  };\n\n  _proto.removeSubscription = function removeSubscription(subscription) {\n    if (this._nativeModule != null) {\n      this._nativeModule.removeListeners(1);\n    }\n\n    _EventEmitter.prototype.removeSubscription.call(this, subscription);\n  };\n\n  return NativeEventEmitter;\n}(EventEmitter);\n\nexport default NativeEventEmitter;","map":{"version":3,"sources":["/usr/app/streamUs/node_modules/react-native-web/dist/vendor/react-native/NativeEventEmitter/index.js"],"names":["_inheritsLoose","subClass","superClass","prototype","Object","create","constructor","__proto__","EventEmitter","Platform","invariant","NativeEventEmitter","_EventEmitter","nativeModule","_this","call","OS","_nativeModule","_proto","addListener","eventType","listener","context","removeAllListeners","count","listeners","length","removeListeners","removeSubscription","subscription"],"mappings":"AAAA;;;;;;;;;AASA;;AAEA,SAASA,cAAT,CAAwBC,QAAxB,EAAkCC,UAAlC,EAA8C;AAAED,EAAAA,QAAQ,CAACE,SAAT,GAAqBC,MAAM,CAACC,MAAP,CAAcH,UAAU,CAACC,SAAzB,CAArB;AAA0DF,EAAAA,QAAQ,CAACE,SAAT,CAAmBG,WAAnB,GAAiCL,QAAjC;AAA2CA,EAAAA,QAAQ,CAACM,SAAT,GAAqBL,UAArB;AAAkC;;AAEvL,OAAOM,YAAP,MAAyB,yBAAzB;AACA,OAAOC,QAAP,MAAqB,2BAArB;AACA,OAAOC,SAAP,MAAsB,oBAAtB;AAEA;;;;;AAIA,IAAIC,kBAAkB;AACtB;AACA,UAAUC,aAAV,EAAyB;AACvBZ,EAAAA,cAAc,CAACW,kBAAD,EAAqBC,aAArB,CAAd;;AAEA,WAASD,kBAAT,CAA4BE,YAA5B,EAA0C;AACxC,QAAIC,KAAJ;;AAEAA,IAAAA,KAAK,GAAGF,aAAa,CAACG,IAAd,CAAmB,IAAnB,KAA4B,IAApC;;AAEA,QAAIN,QAAQ,CAACO,EAAT,KAAgB,KAApB,EAA2B;AACzBN,MAAAA,SAAS,CAACG,YAAD,EAAe,+BAAf,CAAT;AACAC,MAAAA,KAAK,CAACG,aAAN,GAAsBJ,YAAtB;AACD;;AAED,WAAOC,KAAP;AACD;;AAED,MAAII,MAAM,GAAGP,kBAAkB,CAACR,SAAhC;;AAEAe,EAAAA,MAAM,CAACC,WAAP,GAAqB,SAASA,WAAT,CAAqBC,SAArB,EAAgCC,QAAhC,EAA0CC,OAA1C,EAAmD;AACtE,QAAI,KAAKL,aAAL,IAAsB,IAA1B,EAAgC;AAC9B,WAAKA,aAAL,CAAmBE,WAAnB,CAA+BC,SAA/B;AACD;;AAED,WAAOR,aAAa,CAACT,SAAd,CAAwBgB,WAAxB,CAAoCJ,IAApC,CAAyC,IAAzC,EAA+CK,SAA/C,EAA0DC,QAA1D,EAAoEC,OAApE,CAAP;AACD,GAND;;AAQAJ,EAAAA,MAAM,CAACK,kBAAP,GAA4B,SAASA,kBAAT,CAA4BH,SAA5B,EAAuC;AACjEV,IAAAA,SAAS,CAACU,SAAD,EAAY,iCAAZ,CAAT;AACA,QAAII,KAAK,GAAG,KAAKC,SAAL,CAAeL,SAAf,EAA0BM,MAAtC;;AAEA,QAAI,KAAKT,aAAL,IAAsB,IAA1B,EAAgC;AAC9B,WAAKA,aAAL,CAAmBU,eAAnB,CAAmCH,KAAnC;AACD;;AAEDZ,IAAAA,aAAa,CAACT,SAAd,CAAwBoB,kBAAxB,CAA2CR,IAA3C,CAAgD,IAAhD,EAAsDK,SAAtD;AACD,GATD;;AAWAF,EAAAA,MAAM,CAACU,kBAAP,GAA4B,SAASA,kBAAT,CAA4BC,YAA5B,EAA0C;AACpE,QAAI,KAAKZ,aAAL,IAAsB,IAA1B,EAAgC;AAC9B,WAAKA,aAAL,CAAmBU,eAAnB,CAAmC,CAAnC;AACD;;AAEDf,IAAAA,aAAa,CAACT,SAAd,CAAwByB,kBAAxB,CAA2Cb,IAA3C,CAAgD,IAAhD,EAAsDc,YAAtD;AACD,GAND;;AAQA,SAAOlB,kBAAP;AACD,CA9CD,CA8CEH,YA9CF,CAFA;;AAkDA,eAAeG,kBAAf","sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @providesModule NativeEventEmitter\n * \n */\n'use strict';\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }\n\nimport EventEmitter from '../emitter/EventEmitter';\nimport Platform from '../../../exports/Platform';\nimport invariant from 'fbjs/lib/invariant';\n\n/**\n * Abstract base class for implementing event-emitting modules. This implements\n * a subset of the standard EventEmitter node module API.\n */\nvar NativeEventEmitter =\n/*#__PURE__*/\nfunction (_EventEmitter) {\n  _inheritsLoose(NativeEventEmitter, _EventEmitter);\n\n  function NativeEventEmitter(nativeModule) {\n    var _this;\n\n    _this = _EventEmitter.call(this) || this;\n\n    if (Platform.OS === 'ios') {\n      invariant(nativeModule, 'Native module cannot be null.');\n      _this._nativeModule = nativeModule;\n    }\n\n    return _this;\n  }\n\n  var _proto = NativeEventEmitter.prototype;\n\n  _proto.addListener = function addListener(eventType, listener, context) {\n    if (this._nativeModule != null) {\n      this._nativeModule.addListener(eventType);\n    }\n\n    return _EventEmitter.prototype.addListener.call(this, eventType, listener, context);\n  };\n\n  _proto.removeAllListeners = function removeAllListeners(eventType) {\n    invariant(eventType, 'eventType argument is required.');\n    var count = this.listeners(eventType).length;\n\n    if (this._nativeModule != null) {\n      this._nativeModule.removeListeners(count);\n    }\n\n    _EventEmitter.prototype.removeAllListeners.call(this, eventType);\n  };\n\n  _proto.removeSubscription = function removeSubscription(subscription) {\n    if (this._nativeModule != null) {\n      this._nativeModule.removeListeners(1);\n    }\n\n    _EventEmitter.prototype.removeSubscription.call(this, subscription);\n  };\n\n  return NativeEventEmitter;\n}(EventEmitter);\n\nexport default NativeEventEmitter;"]},"metadata":{},"sourceType":"module"}