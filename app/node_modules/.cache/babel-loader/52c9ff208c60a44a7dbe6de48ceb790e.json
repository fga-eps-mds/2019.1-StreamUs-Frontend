{"ast":null,"code":"Object.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Icon = undefined;\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _jsxFileName = \"src/basic/Icon/index.js\";\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require(\"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require(\"prop-types\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _reactNative = require(\"react-native\");\n\nvar _nativeBaseShoutemTheme = require(\"native-base-shoutem-theme\");\n\nvar _IconNB = require(\"../IconNB\");\n\nvar _NBIcons = require(\"./NBIcons.json\");\n\nvar _NBIcons2 = _interopRequireDefault(_NBIcons);\n\nvar _platform = require(\"./../../theme/variables/platform\");\n\nvar _platform2 = _interopRequireDefault(_platform);\n\nvar _lodash = require(\"lodash\");\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _mapPropsToStyleNames = require(\"../../utils/mapPropsToStyleNames\");\n\nvar _mapPropsToStyleNames2 = _interopRequireDefault(_mapPropsToStyleNames);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar Icon = function (_Component) {\n  _inherits(Icon, _Component);\n\n  function Icon() {\n    _classCallCheck(this, Icon);\n\n    return _possibleConstructorReturn(this, (Icon.__proto__ || Object.getPrototypeOf(Icon)).apply(this, arguments));\n  }\n\n  _createClass(Icon, [{\n    key: \"getName\",\n    value: function getName() {\n      var variables = this.context.theme ? this.context.theme[\"@@shoutem.theme/themeStyle\"].variables : _platform2.default;\n      var platformStyle = variables.platformStyle;\n      var platform = variables.platform;\n\n      if ((this.props.type || variables.iconFamily) === \"Ionicons\") {\n        if (typeof _NBIcons2.default[this.props.name] !== \"object\") {\n          return this.props.name;\n        } else if (typeof _NBIcons2.default[this.props.name] === \"object\") {\n          var name = void 0;\n\n          if (platform === \"ios\" && platformStyle !== \"material\") {\n            name = this.props.active ? _NBIcons2.default[this.props.name].ios.active : _NBIcons2.default[this.props.name].ios.default;\n          } else {\n            name = this.props.active ? _NBIcons2.default[this.props.name].android.active : _NBIcons2.default[this.props.name].android.default;\n          }\n\n          return name;\n        }\n      } else {\n        return this.props.name;\n      }\n    }\n  }, {\n    key: \"getIconName\",\n    value: function getIconName() {\n      if (_reactNative.Platform.OS === \"ios\") {\n        if (this.props.ios) {\n          return this.props.ios;\n        } else {\n          return this.props.active ? _NBIcons2.default[this.props.name].ios.active : _NBIcons2.default[this.props.name].ios.default;\n        }\n      } else if (this.props.android) {\n        return this.props.android;\n      } else {\n        return this.props.active ? _NBIcons2.default[this.props.name].android.active : _NBIcons2.default[this.props.name].android.default;\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      if (this.props.ios && this.props.android) {\n        return _react2.default.createElement(_IconNB.IconNB, _extends({\n          ref: function ref(c) {\n            return _this2._root = c;\n          }\n        }, this.props, {\n          name: _reactNative.Platform.OS === \"ios\" ? this.props.ios : this.props.android,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58\n          }\n        }));\n      } else if (this.props.name && (this.props.android || this.props.ios)) {\n        return _react2.default.createElement(_IconNB.IconNB, _extends({\n          ref: function ref(c) {\n            return _this2._root = c;\n          }\n        }, this.props, {\n          name: this.getIconName(),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65\n          }\n        }));\n      } else {\n        return _react2.default.createElement(_IconNB.IconNB, _extends({\n          ref: function ref(c) {\n            return _this2._root = c;\n          }\n        }, this.props, {\n          name: this.getName(),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67\n          }\n        }));\n      }\n    }\n  }]);\n\n  return Icon;\n}(_react.Component);\n\nIcon.contextTypes = {\n  theme: _propTypes2.default.object\n};\nIcon.propTypes = _extends({}, _IconNB.IconNB.propTypes, {\n  style: _propTypes2.default.oneOfType([_propTypes2.default.object, _propTypes2.default.number, _propTypes2.default.array]),\n  name: _propTypes2.default.string,\n  ios: _propTypes2.default.string,\n  android: _propTypes2.default.string,\n  active: _propTypes2.default.bool,\n  type: _propTypes2.default.string\n});\nvar StyledIcon = (0, _nativeBaseShoutemTheme.connectStyle)(\"NativeBase.Icon\", {}, _mapPropsToStyleNames2.default)(Icon);\nexports.Icon = StyledIcon;","map":null,"metadata":{},"sourceType":"script"}