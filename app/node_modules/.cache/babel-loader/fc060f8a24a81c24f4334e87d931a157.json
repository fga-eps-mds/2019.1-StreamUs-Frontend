{"ast":null,"code":"Object.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ListItem = undefined;\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _jsxFileName = \"src/basic/ListItem.js\";\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require(\"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require(\"prop-types\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _reactNative = require(\"react-native\");\n\nvar _nativeBaseShoutemTheme = require(\"native-base-shoutem-theme\");\n\nvar _mapPropsToStyleNames = require(\"../utils/mapPropsToStyleNames\");\n\nvar _mapPropsToStyleNames2 = _interopRequireDefault(_mapPropsToStyleNames);\n\nvar _platform = require(\"../theme/variables/platform\");\n\nvar _platform2 = _interopRequireDefault(_platform);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar ListItem = function (_Component) {\n  _inherits(ListItem, _Component);\n\n  function ListItem() {\n    _classCallCheck(this, ListItem);\n\n    return _possibleConstructorReturn(this, (ListItem.__proto__ || Object.getPrototypeOf(ListItem)).apply(this, arguments));\n  }\n\n  _createClass(ListItem, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var variables = this.context.theme ? this.context.theme[\"@@shoutem.theme/themeStyle\"].variables : _platform2.default;\n\n      if (_reactNative.Platform.OS === \"ios\" || _reactNative.Platform.OS === \"web\" || variables.androidRipple === false || !this.props.onPress && !this.props.onLongPress || _reactNative.Platform.Version <= 21) {\n        return _react2.default.createElement(_reactNative.TouchableHighlight, _extends({\n          onPress: this.props.onPress,\n          onLongPress: this.props.onLongPress,\n          ref: function ref(c) {\n            return _this2._root = c;\n          },\n          underlayColor: variables.listBtnUnderlayColor\n        }, this.props, {\n          style: this.props.touchableHighlightStyle,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 31\n          }\n        }), _react2.default.createElement(_reactNative.View, _extends({}, this.props, {\n          testID: undefined,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39\n          }\n        }), this.props.children));\n      } else {\n        return _react2.default.createElement(_reactNative.TouchableNativeFeedback, _extends({\n          ref: function ref(c) {\n            return _this2._root = c;\n          }\n        }, this.props, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44\n          }\n        }), _react2.default.createElement(_reactNative.View, {\n          style: {\n            marginLeft: -17,\n            paddingLeft: 17\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48\n          }\n        }, _react2.default.createElement(_reactNative.View, _extends({}, this.props, {\n          testID: undefined,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49\n          }\n        }), this.props.children)));\n      }\n    }\n  }]);\n\n  return ListItem;\n}(_react.Component);\n\nListItem.contextTypes = {\n  theme: _propTypes2.default.object\n};\nListItem.propTypes = _extends({}, _reactNative.TouchableHighlight.propTypes, {\n  style: _propTypes2.default.oneOfType([_propTypes2.default.object, _propTypes2.default.number, _propTypes2.default.array]),\n  touchableHighlightStyle: _propTypes2.default.oneOfType([_propTypes2.default.object, _propTypes2.default.array]),\n  itemDivider: _propTypes2.default.bool,\n  button: _propTypes2.default.bool\n});\nvar StyledListItem = (0, _nativeBaseShoutemTheme.connectStyle)(\"NativeBase.ListItem\", {}, _mapPropsToStyleNames2.default)(ListItem);\nexports.ListItem = StyledListItem;","map":null,"metadata":{},"sourceType":"script"}