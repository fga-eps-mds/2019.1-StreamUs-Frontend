{"ast":null,"code":"import createKeyframesRules from './createKeyframesRules';\nimport createRuleBlock from './createRuleBlock';\n\nvar createAtomicRules = function createAtomicRules(selector, prop, value) {\n  var rules = []; // Handle custom properties and custom values that require additional rules\n  // to be created.\n\n  switch (prop) {\n    // See #513\n    case 'pointerEvents':\n      {\n        var _createRuleBlock3;\n\n        var val = value;\n\n        if (value === 'auto' || value === 'box-only') {\n          val = 'auto !important';\n\n          if (value === 'box-only') {\n            var _createRuleBlock;\n\n            var _block = createRuleBlock((_createRuleBlock = {}, _createRuleBlock[prop] = 'none', _createRuleBlock));\n\n            rules.push(selector + \" > *{\" + _block + \"}\");\n          }\n        } else if (value === 'none' || value === 'box-none') {\n          val = 'none !important';\n\n          if (value === 'box-none') {\n            var _createRuleBlock2;\n\n            var _block2 = createRuleBlock((_createRuleBlock2 = {}, _createRuleBlock2[prop] = 'auto', _createRuleBlock2));\n\n            rules.push(selector + \" > *{\" + _block2 + \"}\");\n          }\n        }\n\n        var block = createRuleBlock((_createRuleBlock3 = {}, _createRuleBlock3[prop] = val, _createRuleBlock3));\n        rules.push(selector + \"{\" + block + \"}\");\n        break;\n      }\n\n    case 'placeholderTextColor':\n      {\n        var _block3 = createRuleBlock({\n          color: value,\n          opacity: 1\n        });\n\n        rules.push('@media all {' + (selector + \"::-webkit-input-placeholder{\" + _block3 + \"}\") + (selector + \"::-moz-placeholder{\" + _block3 + \"}\") + (selector + \":-ms-input-placeholder{\" + _block3 + \"}\") + (selector + \"::placeholder{\" + _block3 + \"}\") + '}');\n        break;\n      }\n\n    case 'animationName':\n      {\n        if (typeof value === 'string') {\n          var _createRuleBlock4; // add a className referencing the animation\n\n\n          var _block4 = createRuleBlock((_createRuleBlock4 = {}, _createRuleBlock4[prop] = value, _createRuleBlock4));\n\n          rules.push(selector + \"{\" + _block4 + \"}\");\n        } else {\n          var _createRuleBlock5;\n\n          var animationNames = []; // add the keyframes needed to implement each value\n\n          value.forEach(function (keyframes) {\n            if (typeof keyframes === 'string') {\n              animationNames.push(keyframes);\n            } else {\n              var _createKeyframesRules = createKeyframesRules(keyframes),\n                  identifier = _createKeyframesRules.identifier,\n                  keyframesRules = _createKeyframesRules.rules;\n\n              keyframesRules.forEach(function (rule) {\n                rules.push(rule);\n              });\n              animationNames.push(identifier);\n            }\n          }); // add a className referencing the animation identifiers\n\n          var _block5 = createRuleBlock((_createRuleBlock5 = {}, _createRuleBlock5[prop] = animationNames.join(','), _createRuleBlock5));\n\n          rules.push(selector + \"{\" + _block5 + \"}\");\n        }\n\n        break;\n      }\n\n    default:\n      {\n        var _createRuleBlock6;\n\n        var _block6 = createRuleBlock((_createRuleBlock6 = {}, _createRuleBlock6[prop] = value, _createRuleBlock6));\n\n        rules.push(selector + \"{\" + _block6 + \"}\");\n      }\n  }\n\n  return rules;\n};\n\nexport default createAtomicRules;","map":{"version":3,"sources":["/usr/app/streamUs/node_modules/react-native-web/dist/exports/StyleSheet/createAtomicRules.js"],"names":["createKeyframesRules","createRuleBlock","createAtomicRules","selector","prop","value","rules","_createRuleBlock3","val","_createRuleBlock","_block","push","_createRuleBlock2","_block2","block","_block3","color","opacity","_createRuleBlock4","_block4","_createRuleBlock5","animationNames","forEach","keyframes","_createKeyframesRules","identifier","keyframesRules","rule","_block5","join","_createRuleBlock6","_block6"],"mappings":"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","sourcesContent":["import createKeyframesRules from './createKeyframesRules';\nimport createRuleBlock from './createRuleBlock';\n\nvar createAtomicRules = function createAtomicRules(selector, prop, value) {\n  var rules = []; // Handle custom properties and custom values that require additional rules\n  // to be created.\n\n  switch (prop) {\n    // See #513\n    case 'pointerEvents':\n      {\n        var _createRuleBlock3;\n\n        var val = value;\n\n        if (value === 'auto' || value === 'box-only') {\n          val = 'auto !important';\n\n          if (value === 'box-only') {\n            var _createRuleBlock;\n\n            var _block = createRuleBlock((_createRuleBlock = {}, _createRuleBlock[prop] = 'none', _createRuleBlock));\n\n            rules.push(selector + \" > *{\" + _block + \"}\");\n          }\n        } else if (value === 'none' || value === 'box-none') {\n          val = 'none !important';\n\n          if (value === 'box-none') {\n            var _createRuleBlock2;\n\n            var _block2 = createRuleBlock((_createRuleBlock2 = {}, _createRuleBlock2[prop] = 'auto', _createRuleBlock2));\n\n            rules.push(selector + \" > *{\" + _block2 + \"}\");\n          }\n        }\n\n        var block = createRuleBlock((_createRuleBlock3 = {}, _createRuleBlock3[prop] = val, _createRuleBlock3));\n        rules.push(selector + \"{\" + block + \"}\");\n        break;\n      }\n\n    case 'placeholderTextColor':\n      {\n        var _block3 = createRuleBlock({\n          color: value,\n          opacity: 1\n        });\n\n        rules.push('@media all {' + (selector + \"::-webkit-input-placeholder{\" + _block3 + \"}\") + (selector + \"::-moz-placeholder{\" + _block3 + \"}\") + (selector + \":-ms-input-placeholder{\" + _block3 + \"}\") + (selector + \"::placeholder{\" + _block3 + \"}\") + '}');\n        break;\n      }\n\n    case 'animationName':\n      {\n        if (typeof value === 'string') {\n          var _createRuleBlock4;\n\n          // add a className referencing the animation\n          var _block4 = createRuleBlock((_createRuleBlock4 = {}, _createRuleBlock4[prop] = value, _createRuleBlock4));\n\n          rules.push(selector + \"{\" + _block4 + \"}\");\n        } else {\n          var _createRuleBlock5;\n\n          var animationNames = []; // add the keyframes needed to implement each value\n\n          value.forEach(function (keyframes) {\n            if (typeof keyframes === 'string') {\n              animationNames.push(keyframes);\n            } else {\n              var _createKeyframesRules = createKeyframesRules(keyframes),\n                  identifier = _createKeyframesRules.identifier,\n                  keyframesRules = _createKeyframesRules.rules;\n\n              keyframesRules.forEach(function (rule) {\n                rules.push(rule);\n              });\n              animationNames.push(identifier);\n            }\n          }); // add a className referencing the animation identifiers\n\n          var _block5 = createRuleBlock((_createRuleBlock5 = {}, _createRuleBlock5[prop] = animationNames.join(','), _createRuleBlock5));\n\n          rules.push(selector + \"{\" + _block5 + \"}\");\n        }\n\n        break;\n      }\n\n    default:\n      {\n        var _createRuleBlock6;\n\n        var _block6 = createRuleBlock((_createRuleBlock6 = {}, _createRuleBlock6[prop] = value, _createRuleBlock6));\n\n        rules.push(selector + \"{\" + _block6 + \"}\");\n      }\n  }\n\n  return rules;\n};\n\nexport default createAtomicRules;"]},"metadata":{},"sourceType":"module"}